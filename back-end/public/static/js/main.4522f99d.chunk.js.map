{"version":3,"sources":["images/tent.png","components/SignupPage/SignupButton.js","components/SignupPage/LoginButton.js","store/csrf.js","errorNotifications.js","store/session.js","components/SignupPage/FanSignupForm.js","store/genres.js","components/SignupPage/ArtistSignupPage.js","components/SignupPage/LoginForm.js","images/artist-option-icon.png","images/fan-option-icon.png","components/SignupPage/RoleForm.js","store/ui-fan-signup-form.js","store/ui-artist-signup-form.js","store/ui-login-form.js","store/ui-role-form.js","components/SignupPage/index.js","components/LoginFormPage/index.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","store/follows.js","store/albums.js","components/Dashboard/Albums.js","components/Dashboard/Following.js","components/Dashboard/BioForm.js","store/user.js","components/Dashboard/AddBioButton.js","components/Dashboard/BioSection.js","components/Dashboard/Followers.js","components/Dashboard/index.js","store/album.js","components/CreateAlbumPage/AlbumForm.js","store/tracks.js","components/CreateAlbumPage/TrackForm.js","components/CreateAlbumPage/UploadedTracks.js","components/CreateAlbumPage/LinearIndeterminate.js","components/CreateAlbumPage/AddTrackSection.js","components/CreateAlbumPage/CircularIndeterminate.js","components/CreateAlbumPage/index.js","components/EditAlbumPageContainer/AlbumForm.js","components/EditAlbumPageContainer/TrackForm.js","components/EditAlbumPageContainer/UploadedTracks.js","components/EditAlbumPageContainer/LinearIndeterminate.js","components/EditAlbumPageContainer/AddTrackSection.js","components/EditAlbumPageContainer/CircularIndeterminate.js","components/EditAlbumPageContainer/EditAlbumPage.js","store/index.js","components/EditAlbumPageContainer/index.js","components/AlbumPage/FollowBtn.js","components/AlbumPage/Followers.js","components/AlbumPage/index.js","App.js","index.js"],"names":["SignupButton","showRoleForm","onClick","e","LoginButton","showLoginForm","fetch","url","a","options","method","headers","toUpperCase","console","log","body","FormData","Cookies","get","window","res","contentType","includes","json","data","status","LOAD_USER","REMOVE_USER","loadUser","user","type","login","credential","password","dispatch","JSON","stringify","fanSignup","userName","email","artistName","genre","isArtist","bio","imgUrl","response","artistSignup","initialState","sessionReducer","state","action","FanSignupForm","hideFanSignupForm","useState","setEmail","setPassword","confirmPassword","setConfirmPassword","setUserName","errors","setErrors","useDispatch","updateProperty","property","target","value","handleSubmit","preventDefault","payload","sessionActions","catch","className","map","error","idx","name","placeholder","onChange","required","LOAD_GENRES","genresReducer","list","ArtistSignupForm","setArtistName","setGenre","genreList","useSelector","genres","useHistory","useEffect","id","LoginForm","hideLoginForm","sessionUser","session","setCredential","to","then","RoleForm","hideRoleForm","showFanSignupForm","showArtistSignupForm","updateRole","src","fanOptionIcon","artistOptionIcon","HIDE_FAN_SIGNUP_FORM","SHOW_FAN_SIGNUP_FORM","fanSignupFormReducer","formVisible","HIDE_ARTIST_SIGNUP_FORM","SHOW_ARTIST_SIGNUP_FORM","hideArtistSignupForm","artistSignupFormReducer","HIDE_LOGIN_FORM","SHOW_LOGIN_FORM","loginFormReducer","HIDE_ROLE_FORM","SHOW_ROLE_FORM","roleFormReducer","SignupPage","setNavVisible","fanSignupFormVisible","fanSignupForm","artistSignupFormVisible","artistSignupForm","loginFormVisible","loginForm","roleFormVisible","roleForm","tent","ArtistSignupPage","LoginFormPage","ProfileButton","showMenu","setShowMenu","closeMenu","document","addEventListener","removeEventListener","username","Navigation","isLoaded","exact","LOAD_FOLLOWING","LOAD_FOLLOWERS","getFollowing","following","getFollowers","followers","filterToFollowers","follower","filterToFollowing","fol","followsReducer","followingList","followersList","LOAD_ALL_ALBUMS","LOAD_ALL_ALBUMS_FOR_ONE_ARTIST","LOAD_FEATURED_ALBUMS","albumsReducer","oneArtistAlbumsList","featuredAlbumsList","Albums","albums","handleEditAlbumBtn","album","style","backgroundImage","isPublished","title","Following","BioForm","bioFormVisible","setBioFormVisible","bioEditFormVisible","setBioEditFormVisible","setBio","handleCloseBioFormBtn","getState","updatedUser","userActions","AddBioButton","BioSection","Followers","Dashboard","follows","followsActions","albumId","SET_CURRENT","REMOVE_CURRENT","getOneAlbum","current","createAlbum","location","href","newAlbum","editAlbum","deleteAlbumArtwork","publishAlbum","albumReducer","AlbumForm","albumTitle","setAlbumTitle","description","setDescription","credits","setCredits","img","setImg","setAlbumIsLoading","setCurrentIdx","albumFormErrors","setAlbumFormErrors","files","append","albumActions","createTrack","newTrack","editTrackTitle","trackId","updatedTrack","deleteTrack","TrackForm","currentIdx","tracksData","setTracksData","trackCount","setTrackIsLoading","setUploadedTracksVisible","setTrackCount","currentTrackId","setTrackFormErrors","keyName","trackUrl","onSubmit","title1","track1Url","tracksActions","prevState","marginTop","updateTrackFormProperty","UploadedTracks","setCurrentTrackId","tracks","setTrackDeleteErrors","track","useStyles","makeStyles","theme","root","width","spacing","LinearIndeterminate","classes","LinearProgress","color","AddTrackSection","addTrackIdx","trackIsLoading","display","marginLeft","CircularIndeterminate","CircularProgress","CreateAlbumPage","setIsPublished","uploadedTracksVisible","albumIsLoading","handlePublishBtn","fontSize","handleUploadTrackBtn","handleEditTrackTitleBtn","length","handleDeleteTrackBtn","enhancer","EditAlbumPage","useParams","track1","EditAlbumPageContainer","FollowBtn","artistId","isFollowingArtist","setIsFollowingArtist","some","f","followingId","aria-hidden","newFollow","AlbumPage","currentTrack","setCurrentTrack","artist","autoPlay","volume","onPlay","showDownloadProgress","i","alt","App","setIsLoaded","path","render","rootReducer","combineReducers","artistSignupReducer","fanSignupReducer","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4522f99d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tent.660aed22.png\";","import React from 'react';\n\nconst SignupButton = ({ showRoleForm }) => {\n\n    const handleClick = (e) => {\n        showRoleForm();\n    }\n\n    return (\n        <div>\n            <button onClick={handleClick}>sign up</button>\n        </div>\n    )\n}\n\nexport default SignupButton;","import React from 'react';\n\nconst LoginButton = ({showLoginForm}) => {\n\n    const handleClick = () => {\n        showLoginForm();\n    }\n\n    return (\n        <div>\n            <button onClick={handleClick}>log in</button>\n        </div>\n    )\n}\n\nexport default LoginButton;","import Cookies from 'js-cookie';\n\nexport async function fetch(url, options = {}) {\n  // set options.method to 'GET' if there is no method\n  options.method = options.method || 'GET';\n  // set options.headers to an empty object if there is no headers\n  options.headers = options.headers || {};\n\n  // if the options.method is not 'GET', then set the \"Content-Type\" header to\n    // \"application/json\", and set the \"CSRF-TOKEN\" header to the value of the \n    // \"XSRF-TOKEN\" cookie\n  if (options.method.toUpperCase() !== 'GET') {\n    console.log(\"INSIDE CSRF!!!!\");\n    if(options.body instanceof FormData) {\n      console.log(\"INSTANCE OF FORM DATA!!\");\n      options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n    }  else {\n      options.headers['Content-Type'] =\n      options.headers['Content-Type'] || 'application/json';\n      options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n    }\n    \n  }\n  // call the default window's fetch with the url and the options passed in\n  const res = await window.fetch(url, options);\n  \n  // if the response's body is JSON, then parse the JSON body and set it to a\n  // key of `data` on the response\n  const contentType = res.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    const data = await res.json();\n    res.data = data;\n  }\n\n  if (res.status >= 400) throw res;\n\n  // if the response status code is under 400, then return the response to the\n    // next promise chain\n  return res;\n}\n\nexport function restoreCSRF() {\n    return fetch('/api/csrf/restore');\n}\n\n","const errorNotifications = async (err) => {\n    if(err.status >= 400 && err.status < 600) {\n        const errorJSON = await err.json();\n        // const errorJSON = err;\n  \n        console.log(\"ERRORJSON!!!\", errorJSON);\n  \n        const errorsContainer = document.querySelector(\".errors-container\");\n  \n        let errorsHtml = [\n            `<li>\n                Something went wrong. Please try again.\n            </li>`,\n        ];\n  \n        const { errors } = errorJSON;\n  \n        if(errors && Array.isArray(errors)) {\n            errorsHtml = errors.map(\n                (message) => {\n                    console.log(\"MESSAGE!!!\", message);\n                    return (`\n                        <li>\n                            ${ message }\n                        </li>\n                    `)\n                }\n            )\n        }\n        errorsContainer.innerHTML = errorsHtml.join(\"\");\n  \n    } else {\n        alert(\n            \"Something went wrong. Please check your internet connection and try again!\"\n        );\n  \n    }\n  };\n  \n  export default errorNotifications;","\nimport { fetch } from './csrf';\nimport errorNotifications from '../errorNotifications';\n\nexport const LOAD_USER = \"songcamp/session/LOAD_USER\";\nexport const REMOVE_USER = \"songcamp/session/REMOVE_USER\";\n\n\n// ==============================================================\n// ACTIONS\n// ==============================================================\nexport const loadUser = (user) => ({\n    type: LOAD_USER,\n    user\n})\n\nexport const removeUser = (user) => ({\n    type: REMOVE_USER,\n})\n\n\n// ==============================================================\n// LOGIN USER\n// ==============================================================\nexport const login = ({credential, password}) => async (dispatch) => {\n    \n        const res = await fetch('/api/session', {\n            method: 'POST',\n            body: JSON.stringify({ credential, password })\n        })\n    \n        // if(!res.ok) {\n        //     throw res;\n        // }\n\n        dispatch(loadUser(res.data.user));\n        return res;\n}\n\n\n// ==============================================================\n// RESTORE USER\n// ==============================================================\nexport const restoreUser = () => async dispatch => {\n    const res = await fetch('/api/session');\n    dispatch(loadUser(res.data.user));\n    return res;\n};\n\n\n// ==============================================================\n// FAN SIGN UP\n// ==============================================================\nexport const fanSignup = (user) => async (dispatch) => {\n    const { userName, email, password, artistName, genre, isArtist, bio, imgUrl } = user;\n    const response = await fetch(\"/api/users/fans\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        userName,\n        email,\n        password,\n        artistName,\n        isArtist,\n        bio,\n        imgUrl,\n        genre\n      }),\n    });\n    dispatch(loadUser(response.data.user));\n    return response;\n};\n\n\n// ==============================================================\n// ARTIST SIGN UP\n// ==============================================================\nexport const artistSignup = (user) => async (dispatch) => {\n    const { userName, email, password, artistName, genre, isArtist, bio, imgUrl } = user;\n    const response = await fetch(\"/api/users/artists\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        userName,\n        email,\n        password,\n        artistName,\n        isArtist,\n        bio,\n        genre,\n        imgUrl,\n      }),\n    });\n    dispatch(loadUser(response.data.user));\n    return response;\n};\n\n\n// ==============================================================\n// LOGOUT USER\n// ==============================================================\nexport const logout = () => async (dispatch) => {\n    const response = await fetch('/api/session', {\n      method: 'DELETE',\n    });\n    dispatch(removeUser());\n    return response;\n  };\n\n\n// ==============================================================\n// SESSION REDUCER\n// ==============================================================\nconst initialState = { user: null };\n\nconst sessionReducer = (state= initialState, action)  => {\n    console.log(\"action!\", action);\n    switch(action.type) {\n        case LOAD_USER: {\n            return {\n                ...state,\n                user: action.user\n            }\n        }\n\n        case REMOVE_USER: {\n            return {\n                ...state,\n                user: null\n            }\n        }\n\n        default: \n            return state;\n    }\n}\n\nexport default sessionReducer;","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport './modal-form.css';\nimport * as sessionActions from \"../../store/session\";\n// import { setToken } from \"../store/actions/authentication\";\n\nconst FanSignupForm = ({ hideFanSignupForm }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const isArtist = false;\n    const artistName = null;\n    const bio= null; \n    const imgUrl= null;\n    const genre= null;\n    // const [formVisible, setFormVisible] = useState(\"\");\n    const dispatch = useDispatch();\n \n    // for testing\n\n    const updateProperty = (property) => (e) => {\n        console.log(e.target.value)\n        property(e.target.value);\n    }\n\n    const handleClose = (e) => {\n        console.log('close');\n        hideFanSignupForm();\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log('IN HANDLESUBMIT!!!');\n        const payload = {\n            email,\n            password,\n            userName,\n            artistName,\n            isArtist,\n            bio,\n            imgUrl,\n            genre,\n        }\n\n        if (password === confirmPassword) {\n            setErrors([]);\n            hideFanSignupForm();\n            return dispatch(sessionActions.fanSignup(payload))\n              .catch(res => {\n                if (res.data && res.data.errors) setErrors(res.data.errors);\n              });\n            }\n            return setErrors(['Confirm Password field must be the same as the Password field']);\n        \n        // (async () => {\n        //     const successMessage = dispatch(FanSignup(payload));\n        //     if(successMessage) {\n        //     }\n        // })();\n    }\n\n    return (\n        <div className=\"form-holder\">\n            <div className=\"form-content\">\n                <div className=\"form-header-container\">\n                    <h3 className=\"form-header\">Sign up for a Songcamp fan account</h3> <span onClick={handleClose} className=\"form-close-btn\">x</span>\n                </div>\n                <form className=\"form\">\n                    <ul>\n                        {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                    </ul>\n                    <label>Email address</label>\n                    <input name=\"email\" placeholder={email} value={email} onChange={updateProperty(setEmail)}/>\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" placeholder={password} value={password} onChange={updateProperty(setPassword)}/>\n                    <label>Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        required\n                    />\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" placeholder={userName} value={userName} onChange={updateProperty(setUserName)} />\n                    <label>\n      </label>\n                    <button onClick={handleSubmit}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default FanSignupForm;\n","\nimport { fetch } from './csrf';\n\nexport const LOAD_GENRES = \"songcamp/genres/LOAD_GENRES\";\n\nexport const loadGenres = (list) => ({\n    type: LOAD_GENRES,\n    list\n})\n\n\n// GET list of all artists the user is following\nexport const getGenres = () => async (dispatch) => {\n \n    const res = await fetch(`/api/genres`);\n\n    console.log(\"GENRES!!\", res.data.genres);\n    dispatch(loadGenres(res.data.genres));\n    // return genres;\n} \n\n\nexport function genresReducer(state={}, action){\n    switch (action.type) {\n        case LOAD_GENRES: {\n            return {\n                ...state,\n                list: action.list\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default genresReducer;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './artist-signup-page.css';\nimport * as genreActions from \"../../store/genres\";\nimport * as sessionActions from \"../../store/session\";\n\n\nconst ArtistSignupForm = () => {\n    const [artistName, setArtistName] = useState(\"\");\n    const [genre, setGenre] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const genreList = useSelector((state) => state.genres.list);\n    const [errors, setErrors] = useState([]);\n    const isArtist = true;\n    const bio = null;\n    const imgUrl = null;\n    // const genre= null;\n    // const follows = useSelector((state) => state.follows.list);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(genreActions.getGenres());\n    }, [dispatch]);\n\n    const updateProperty = (property) => (e) => {\n        console.log(e.target.value)\n        property(e.target.value);\n    }\n\n    const handleClose = (e) => {\n        console.log('close')\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n   \n        const payload = {\n            email,\n            userName,\n            password,\n            artistName,\n            genre,\n            isArtist,\n            imgUrl,\n            bio,\n        }\n\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.artistSignup(payload))\n                .catch((res) => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors);\n            });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n        // history.replace(\"/dashboard\");\n    }\n\n    // if(!genreList) {\n    //     return null;\n    // }\n\n    return (\n        <div className=\"artist-signup-form__holder\">\n            <div className=\"artist-signup-form__content\">\n                <div className=\"artist-signup-form__header-container\">\n                    <h3 className=\"signup-form-header\">Sign up for a Songcamp artist account</h3> <span onClick={handleClose} className=\"signup-form-close-btn\">x</span>\n                </div>\n                <form className=\"artist-signup-form\">\n                    <ul>\n                        {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                    </ul>\n                    <label>Artist/Band name</label>\n                    <input type=\"text\" name=\"artistName\" placeholder={artistName} value={artistName} onChange={updateProperty(setArtistName)} />\n                    <label>Genre</label>\n                    <select onChange={updateProperty(setGenre)}>\n                        <option>-- choose a genre --</option>\n                        {genreList && genreList.map((genre) => (\n                            <option key={genre.id}>{genre.type}</option>\n                        ))}\n                    </select>\n                    <label>Username</label>\n                    <input type=\"text\" name=\"username\" placeholder={userName} value={userName} onChange={updateProperty(setUserName)} />\n                    <label>Email address</label>\n                    <input name=\"email\" placeholder={email} value={email} onChange={updateProperty(setEmail)}/>\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" placeholder={password} value={password} onChange={updateProperty(setPassword)}/>\n                    <label>Confirm password</label>\n                    <input type=\"password\" name=\"confirmPassword\" placeholder={confirmPassword} value={confirmPassword} onChange={updateProperty(setConfirmPassword)}/>\n                    <button onClick={handleSubmit}>Sign up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default ArtistSignupForm;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport * as sessionActions from \"../../store/session\";\n\n// import { getUser} from \"../store/actions/user\";\n// import { setToken } from \"../store/actions/authentication\";\nimport './modal-form.css';\n\nconst LoginForm = ({ hideLoginForm }) => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [credential, setCredential] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return (\n        <Redirect to=\"/\" />\n    );\n\n    const updateProperty = (property) => (e) => {\n        property(e.target.value);\n    }\n\n    const handleClose = (e) => {\n        console.log('close');\n        hideLoginForm();\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log('IN HANDLESUBMIT!!!');\n\n        return dispatch(sessionActions.login({ credential, password }))\n                .then(() => hideLoginForm())\n                .catch((res) => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors);\n        });\n    }\n\n    return (\n        <div className=\"form-holder\">\n            <div className=\"form-content\">\n                <div className=\"form-header-container\">\n                    <h3 className=\"form-header\">Log in</h3> <span onClick={handleClose} className=\"form-close-btn\">x</span>\n                </div>\n                <form className=\"form\">\n                    <ul>\n                        {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                    </ul>\n                    <label>Email address</label>\n                    <input name=\"email\" placeholder={credential} value={credential} onChange={updateProperty(setCredential)}/>\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" placeholder={password} value={password} onChange={updateProperty(setPassword)}/>\n                    <button onClick={handleSubmit}>Log in</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm;","export default __webpack_public_path__ + \"static/media/artist-option-icon.4cf0f7b1.png\";","export default __webpack_public_path__ + \"static/media/fan-option-icon.d9d6c2ea.png\";","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n// import { showFanSignupForm } from \"../store/actions/ui-fan-signup-form\";\n// import * as fanSignupFormActions from \"../../store/ui-fan-signup-form\";\n\n// import { FanSignup } from \"../store/actions/authentication\";\n// import { setToken } from \"../store/actions/authentication\";\nimport './modal-form.css';\nimport artistOptionIcon from \"../../images/artist-option-icon.png\";\nimport fanOptionIcon from \"../../images/fan-option-icon.png\";\n\nconst RoleForm = ({ hideRoleForm, showFanSignupForm, showArtistSignupForm }) => {\n    // const [role, setRole] = useState('');\n    // const history = useHistory();\n\n    const updateRole = (e) =>  {\n        e.preventDefault();\n        console.log(`USER CHOSE ${e.target.value} AS ROLE!!!!`);\n        if(e.target.value === \"fan\") {\n            showFanSignupForm();\n        } else if(e.target.value === \"artist\") {\n            showArtistSignupForm()\n            // history.replace(\"/artist-signup\");\n        }\n\n        // setRole(e.target.value);\n        hideRoleForm();\n    }\n\n    const handleClose = (e) => {\n        console.log('close');\n        hideRoleForm();\n    }\n\n    return (\n        <div className=\"form-holder\">\n            <div className=\"role-form-content\">\n                <div className=\"form-header-container\">\n                    <h3 className=\"form-header\">Sign up for a Songcamp account</h3>\n                    <span onClick={handleClose} className=\"form-close-btn\">x</span>\n                </div>\n\n                <form className=\"role-form\">\n                    <div className=\"role-form__option-holder\">\n                        <img src={fanOptionIcon} />\n                        <div className=\"role-form__button-holder\">\n                            <button className=\"role-form__fan-button\" value=\"fan\" onClick={updateRole}>Sign up as a fan</button>\n                            <p>Follow your favorite artists!</p>\n                        </div>\n                    </div>\n\n                    <div className=\"role-form__option-holder\">\n                        <img src={artistOptionIcon} />\n                        <div className=\"role-form__button-holder\">\n                            <button className=\"role-form__artist-button\" value=\"artist\" onClick={updateRole}>Sign up as an artist</button>\n                            <p>Share your music with your fans!</p>\n                        </div>\n                    </div>\n\n                    {/* <button value=\"artist\" onClick={updateRole}>Sign up as an artist</button> */}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default RoleForm;","export const HIDE_FAN_SIGNUP_FORM = \"songcamp/ui-fan-signup/HIDE_FORM\";\nexport const SHOW_FAN_SIGNUP_FORM = \"songcamp/ui-fan-signup/SHOW_FORM\";\n\nexport const hideFanSignupForm = () => ({\n    type: HIDE_FAN_SIGNUP_FORM\n})\n\nexport const showFanSignupForm = () => ({\n    type: SHOW_FAN_SIGNUP_FORM\n})\n\nexport function fanSignupFormReducer(state = { formVisible: false }, action) {\n    switch(action.type) {\n        case HIDE_FAN_SIGNUP_FORM: {\n            return {\n                ...state,\n                formVisible: false,\n            };\n        }\n\n        case SHOW_FAN_SIGNUP_FORM: {\n            return {\n                ...state,\n                formVisible: true,\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default fanSignupFormReducer;","export const HIDE_ARTIST_SIGNUP_FORM = \"songcamp/ui-artist-signup/HIDE_FORM\";\nexport const SHOW_ARTIST_SIGNUP_FORM = \"songcamp/ui-artist-signup/SHOW_FORM\";\n\nexport const hideArtistSignupForm = () => ({\n    type: HIDE_ARTIST_SIGNUP_FORM\n})\n\nexport const showArtistSignupForm = () => ({\n    type: SHOW_ARTIST_SIGNUP_FORM\n})\n\nexport function artistSignupFormReducer(state = { formVisible: false }, action) {\n    switch(action.type) {\n        case HIDE_ARTIST_SIGNUP_FORM: {\n            return {\n                ...state,\n                formVisible: false,\n            };\n        }\n\n        case SHOW_ARTIST_SIGNUP_FORM: {\n            return {\n                ...state,\n                formVisible: true,\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default artistSignupFormReducer;","export const HIDE_LOGIN_FORM = \"songcamp/ui-login/HIDE_FORM\";\nexport const SHOW_LOGIN_FORM = \"songcamp/ui-login/SHOW_FORM\";\n\nexport const hideLoginForm = () => ({\n    type: HIDE_LOGIN_FORM\n})\n\nexport const showLoginForm = () => ({\n    type: SHOW_LOGIN_FORM\n})\n\nexport function loginFormReducer(state = { formVisible: false }, action) {\n    switch(action.type) {\n        case HIDE_LOGIN_FORM: {\n            return {\n                ...state,\n                formVisible: false,\n            };\n        }\n\n        case SHOW_LOGIN_FORM: {\n            return {\n                ...state,\n                formVisible: true,\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default loginFormReducer;","export const HIDE_ROLE_FORM = \"songcamp/ui-role/HIDE_FORM\";\nexport const SHOW_ROLE_FORM = \"songcamp/ui-role/SHOW_FORM\";\n\nexport const hideRoleForm = () => ({\n    type: HIDE_ROLE_FORM\n})\n\nexport const showRoleForm = () => ({\n    type: SHOW_ROLE_FORM\n})\n\nexport function roleFormReducer(state = { formVisible: false }, action) {\n    switch(action.type) {\n        case HIDE_ROLE_FORM: {\n            return {\n                ...state,\n                formVisible: false,\n            };\n        }\n\n        case SHOW_ROLE_FORM: {\n            return {\n                ...state,\n                formVisible: true,\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default roleFormReducer;","import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector, } from \"react-redux\";\n\nimport './signup-page.css';\nimport tent from '../../images/tent.png';\nimport SignupButton from './SignupButton';\nimport LoginButton from './LoginButton';\nimport FanSignupForm from './FanSignupForm';\nimport ArtistSignupPage from './ArtistSignupPage';\n\nimport LoginForm from './LoginForm';\nimport RoleForm from './RoleForm';\nimport { showFanSignupForm, hideFanSignupForm } from '../../store/ui-fan-signup-form';\nimport { showArtistSignupForm, hideArtistSignupForm } from '../../store/ui-artist-signup-form';\nimport { showLoginForm, hideLoginForm } from '../../store/ui-login-form';\nimport { showRoleForm, hideRoleForm } from '../../store/ui-role-form';\n// import { FanSignup } from \"../store/actions/authentication\";\n\nconst SignupPage = ({ setNavVisible }) => {\n    // const [role, setRole] = useState('');\n    const fanSignupFormVisible = useSelector(state => state.fanSignupForm.formVisible);\n    const artistSignupFormVisible = useSelector(state => state.artistSignupForm.formVisible);\n    const loginFormVisible = useSelector(state => state.loginForm.formVisible);\n    const roleFormVisible = useSelector(state => state.roleForm.formVisible);\n    const dispatch = useDispatch();\n\n    // const updateProperty = (property) => (e) => {\n    //     console.log(e.target.value)\n    //     property(e.target.value);\n    // }\n\n    // useEffect(() => {\n    //     setNavVisible(false);\n    // }, [])\n\n    return (\n        <>\n            { fanSignupFormVisible ? \n                ( <FanSignupForm hideFanSignupForm={ () => dispatch(hideFanSignupForm()) } /> ) : null }\n            { loginFormVisible ? \n                ( <LoginForm hideLoginForm={ () => dispatch(hideLoginForm()) } /> ) : null }  \n            { roleFormVisible ? \n                ( \n                    <RoleForm \n                        hideRoleForm={ () => dispatch(hideRoleForm()) } \n                        showFanSignupForm={ () => dispatch(showFanSignupForm()) } \n                        showArtistSignupForm={ () => dispatch(showArtistSignupForm()) } \n                    /> \n                ) : null \n            }\n            <div className=\"signup-page__holder\">\n                <div className=\"signup-page__top-row-holder\">\n                    <div className=\"signup-page__header-holder\">\n\n                            <div className=\"signup-page__logo-holder\">\n                                <img className=\"signup-page__tent-img\" src={tent} />\n                                <h3>songcamp</h3>\n                            </div>\n                            <div className=\"signup-page__discover\">\n                                Discover new and amazing music and support the artists who make it. \n                            </div>\n\n                    </div>\n                    <div className=\"signup-page__signup-login-btn-holder\">\n                        <SignupButton \n                            showRoleForm={ () => dispatch(showRoleForm()) }\n                        />\n                        <LoginButton \n                            showLoginForm={ () => dispatch(showLoginForm()) }\n                        />\n                    </div>\n                </div>\n\n                { artistSignupFormVisible ? \n                    (<ArtistSignupPage hideArtistSignupForm={hideArtistSignupForm} />) : \n                    (\n\n                        <div className=\"signup-page__main-img-holder\">\n                            <div className=\"signup-page__message-holder\">\n                                <h2>Welcome to Songcamp</h2>\n                                &nbsp;Listen. Create. Share.\n                                <button>Sign Up Now</button>\n                            </div>\n                        </div>\n                    )\n                \n                }\n\n                <div className=\"signup-page__footer\">\n                    \n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignupPage;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport * as sessionActions from '../../store/session';\n\nconst LoginFormPage = () => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [credential, setCredential] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return (\n        <Redirect to=\"/\" />\n      );\n\n    const updateProperty = (property) => (e) => {\n        property(e.target.value);\n    }\n\n    const handleClose = (e) => {\n        console.log('close');\n        // hideLoginForm();\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const payload = {\n            credential,\n            password,\n        }\n\n        return dispatch(sessionActions.login({ credential, password }))\n                .catch((res) => {\n                    if (res.data && res.data.errors) setErrors(res.data.errors);\n        });\n\n        // hideLoginForm();\n    }\n\n    return (\n        <div className=\"signup-form-holder\">\n            <div className=\"signup-form-content\">\n                <div className=\"signup-form-header-container\">\n                    <h3 className=\"signup-form-header\">Log in</h3> <span onClick={handleClose} className=\"signup-form-close-btn\">x</span>\n                </div>\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul>\n                <form className=\"signup-form\">\n                    <label>Email address</label>\n                    <input name=\"email\" placeholder={credential} value={credential} onChange={updateProperty(setCredential)}/>\n                    <label>Password</label>\n                    <input type=\"password\" name=\"password\" placeholder={password} value={password} onChange={updateProperty(setPassword)}/>\n                    <button onClick={handleSubmit}>Log in</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginFormPage;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as sessionActions from \"../../store/session\";\n\nexport const ProfileButton = ({ user }) => {\n    const dispatch = useDispatch();\n    const [showMenu, setShowMenu] = useState(false);\n    const openMenu = () => {\n        if (showMenu) return;\n        setShowMenu(true);\n      };\n      \n      useEffect(() => {\n        if (!showMenu) return;\n    \n        const closeMenu = () => {\n          setShowMenu(false);\n        };\n    \n        document.addEventListener('click', closeMenu);\n      \n        return () => document.removeEventListener(\"click\", closeMenu);\n      }, [showMenu]);\n    \n      const logout = (e) => {\n        e.preventDefault();\n        dispatch(sessionActions.logout());\n      };\n    \n      return (\n        <>\n          <button className=\"profile-button\" onClick={openMenu}>\n                <i className=\"fab fa-creative-commons-sampling\"></i>\n          </button>\n          {showMenu && (\n            <ul className=\"profile-dropdown\">\n              <li>{user.username}</li>\n              <li>{user.email}</li>\n              <li>\n                <button onClick={logout}>Log Out</button>\n              </li>\n            </ul>\n          )}\n        </>\n      );\n    }\n    \n    export default ProfileButton;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport '../../css/navigation.css'\nimport ProfileButton from './ProfileButton';\n\nexport const Navigation = ({ isLoaded }) => {\n    const sessionUser = useSelector((state) => state.session.user);\n\n    console.log(\"USER\", sessionUser);\n    if(!isLoaded) {\n        return null;\n    }\n\n    return (\n        <>\n        {\n            sessionUser ? <ProfileButton user={sessionUser} /> :\n            <div>\n                <NavLink exact to=\"/\">Home</NavLink>\n                <NavLink exact to=\"/login\">Login</NavLink>\n                <NavLink exact to=\"/signup\">Signup</NavLink>\n            </div>\n        }\n        </>\n    )\n}\n\nexport default Navigation;\n","import { fetch } from './csrf';\n\nexport const LOAD_FOLLOWING = \"songcamp/following/LOAD_FOLLOWING\";\nexport const LOAD_FOLLOWERS = \"songcamp/followers/LOAD_FOLLOWERS\";\n\n\n// =============================================================================================\n// FOLLOWS ACTIONS\n// =============================================================================================\nexport const loadFollowing = (list) => ({\n    type: LOAD_FOLLOWING,\n    list\n})\n\nexport const loadFollowers = (list) => ({\n    type: LOAD_FOLLOWERS,\n    list\n})\n\n\n// =============================================================================================\n// GET LIST OF ALL ARTISTS USER IS FOLLOWING\n// =============================================================================================\nexport const getFollowing = (id) => async (dispatch) => {\n        const res = await fetch(`/api/follows/following/${id}`);\n\n        console.log(\"FOLLOWING LIST!!!! \", res.data.following);\n\n        dispatch(loadFollowing(res.data.following));\n        return res;\n} \n\n\n// =============================================================================================\n// GET LIST OF ALL FANS FOLLOWING ARTIST\n// =============================================================================================\nexport const getFollowers = (id) => async (dispatch) => {\n        const res = await fetch(`/api/follows/followers/${id}`);\n        dispatch(loadFollowers(res.data.followers));\n        return res;\n} \n\n\n// ==============================================================\n// CREATE A FOLLOWING\n// ==============================================================\nexport const follow = (followingId) => async (dispatch, getState) => {\n    \n    // const body = { followingId } ;\n    const {\n        session: { user: { id } }\n    } = getState();\n\n    const res = await fetch(`/api/follows/${followingId}`, {\n        method: \"POST\",\n    });\n\n    console.log(\"add follow successful!!!! \", res.data.newFollow);\n    dispatch(getFollowing(id));\n    return res;\n} \n\n\n// ==============================================================\n// DELETE A FOLLOWING\n// ==============================================================\nexport const deleteFollow = (followingId) => async (dispatch, getState) => {\n\n    const {\n        session: { user: { id } }\n    } = getState();\n\n    console.log(\"INSIDE DELETE FOLLOW!!\", followingId)\n\n        const res = await fetch(`/api/follows/${followingId}`, {\n            method: \"DELETE\",\n        });\n    \n        if(res.status === 401) {\n            window.location.href = \"/log-in\";\n            return;\n        }\n\n        dispatch(getFollowing(id));\n        return res;\n}\n\n\n// ==============================================================\n// HELPER FUNCTION - Filters to followers of an artist\n// ==============================================================\nconst filterToFollowers = (list) => {\n    return list.map(follower => {\n        return follower.user;\n    })\n}\n\nconst filterToFollowing = (list) => {\n    return list.map(fol => {\n        return fol.following;\n    })\n}\n\n\n// ==============================================================\n// FOLLOWS REDUCER\n// ==============================================================\nexport function followsReducer(state={}, action){\n    switch (action.type) {\n        case LOAD_FOLLOWING: {\n            return {\n                ...state,\n                followingList: filterToFollowing(action.list)\n            }\n        }\n\n        case LOAD_FOLLOWERS: {\n            return {\n                ...state,\n                followersList: filterToFollowers(action.list)\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default followsReducer;\n\n// ERRORS NOTIFICATIONS =============================================================================================\n// if(err.status >= 400 && err.status < 600) {\n        //     const errorJSON = await err.json();\n            // const errorsContainer = document.querySelector(\".errors-container\");\n\n            // const errorsHtml = [\n            //     `<div class=\"alert alert-danger\">\n            //         Something went wrong. Please try again.\n            //     </div>`\n            // \n\n            // const { errors } = errorJSON;\n\n            // if(errors && Array.isArray(errors)) {\n                // errorsHtml = errors.map(\n                //     (message) => \n                //     `<div class=\"alert alert-danger\">\n                //         ${ message }\n                //     </div>`\n                // )\n\n                // console.log(\"ERRORS!!\", errors)\n            // }\n\n            // errorsContainer.innerHTML = errorsHtml.join(\"\");\n        // } else {\n        //     alert(\n        //         \"Something went wrong. Please check your internet connection and try again!\"\n        //     )\n        // }","import { fetch } from './csrf';\n\nexport const LOAD_ALL_ALBUMS = \"songcamp/albums/LOAD_ALL_ALBUMS\";\nexport const LOAD_ALL_ALBUMS_FOR_ONE_ARTIST = \"songcamp/albums/LOAD_ALL_ALBUMS_FOR_ONE_ARTIST\";\nexport const LOAD_FEATURED_ALBUMS = \"songcamp/albums/LOAD_FEATURED_ALBUMS\";\n\nexport const loadAllAlbums = (list) => ({\n    type: LOAD_ALL_ALBUMS,\n    list\n})\n\nexport const loadAllAlbumsForOneArtist = (list) => ({\n    type: LOAD_ALL_ALBUMS_FOR_ONE_ARTIST,\n    list\n})\n\nexport const loadFeaturedAlbums = (list) => ({\n  type: LOAD_FEATURED_ALBUMS,\n  list\n})\n// export const setCurrent = (current) => ({\n//     type: SET_CURRENT,\n//     current\n// })\n\n\n// ========================================================================================\n// GET ALL PUBLISHED ALBUMS\n// ========================================================================================\nexport const getAllPublishedAlbums = () => async (dispatch, getState) => {\n    const res = await fetch(`/api/albums`);\n    \n    dispatch(loadAllAlbums(res.data.allAlbums));\n    return res;\n}\n \n\n\n// ========================================================================================\n// GET ALL ALBUMS FOR ONE ARTIST\n// ========================================================================================\nexport const getAllAlbumsForOneArtist = (userId) => async (dispatch, getState) => {\n    const {\n        session: { user: { id } }\n    } = getState();\n\n    const res = await fetch(`/api/albums/artist/${id}/all`);\n    \n    dispatch(loadAllAlbumsForOneArtist(res.data.albums));\n    return res;\n}\n\n\n// ========================================================================================\n// GET FEATURED ALBUMS - Random 5 published records\n// ========================================================================================\nexport const getFeaturedAlbums = () => async (dispatch) => {\n\n  const res = await fetch(`/api/albums/featured`);\n  \n  dispatch(loadFeaturedAlbums(res.data.featuredAlbums));\n  return res;\n}\n\n// ========================================================================================\n// ALBUMS REDUCER\n// ========================================================================================\nexport function albumsReducer(state = {}, action) {\n    switch (action.type) {\n      case LOAD_ALL_ALBUMS: {\n        return {\n          ...state,\n          list: action.list,\n        };\n      }\n  \n      case LOAD_ALL_ALBUMS_FOR_ONE_ARTIST: {\n        return {\n          ...state,\n          oneArtistAlbumsList: action.list,\n        };\n      }\n\n      case LOAD_FEATURED_ALBUMS: {\n        return {\n          ...state,\n          featuredAlbumsList: action.list,\n        };\n      }\n  \n      default:\n        return state;\n    }\n  }\n\nexport default albumsReducer;\n\n// // ========================================================================================\n// // GET ONE ALBUM\n// // ========================================================================================\n// export const getOneAlbum = (id) => async (dispatch, getState) => {\n//     const {\n//         authentication: { token }\n//     } = getState();\n\n//     console.log(\"GET ONE ALBUM\");\n\n//     try{\n//         const response = await fetch(`${baseUrl}/albums/${id}`, {\n//             headers: { Authorization: `Bearer ${token}`},\n//         });\n        \n//         if(!response.ok) {\n//             throw response;\n//         }\n        \n//         const { album } = await response.json();\n        \n//         dispatch(setCurrent(album));\n\n//     } catch(err) {\n//         console.error(err);\n//         // errorNotifications(err);\n//     }\n// }\n\n\n// // ========================================================================================\n// // CREATE ALBUM\n// // ========================================================================================\n// export const createAlbum = (payload) => async (dispatch, getState) => {\n//     console.log(\"INSIDE CREATE ALBUM\")\n//     const {\n//         authentication: { token }\n//     } = getState();\n\n//     try {\n//         const response = await fetch(`${baseUrl}/albums`, {\n//             method: \"POST\",\n//             headers: {\n//                 // \"Content-Type\": \"application/json\",\n//                 Authorization: `Bearer ${token}`\n//             },\n//             body: payload\n//         })\n\n//         if(response.status === 401) {\n//             window.location.href = \"/log-in\";\n//             return;\n//         }\n\n//         if(!response.ok) {\n//             throw response;\n//         }\n\n//         const { newAlbum } = await response.json();\n//         console.log(\"NEW ALBUM!!!!!\", newAlbum);\n//         dispatch(setCurrent(newAlbum));\n//         console.log(\"new album created!!!\");\n\n//         return newAlbum;\n\n//     } catch(err) {\n//         // errorNotifications(err);\n//     }\n// }\n\n\n// // ========================================================================================\n// // EDIT ALBUM\n// // ========================================================================================\n// export const editAlbum = (payload, albumId) => async (dispatch, getState) => {\n//     console.log(\"INSIDE EDIT ALBUM\")\n//     const {\n//         authentication: { token }\n//     } = getState();\n\n//     try {\n//         const response = await fetch(`${baseUrl}/albums/${albumId}`, {\n//             method: \"PUT\",\n//             headers: {\n//                 // \"Content-Type\": \"application/json\",\n//                 Authorization: `Bearer ${token}`\n//             },\n//             body: payload\n//         })\n\n//         if(response.status === 401) {\n//             window.location.href = \"/log-in\";\n//             return;\n//         }\n\n//         if(!response.ok) {\n//             throw response;\n//         }\n\n//         const { updatedAlbum } = await response.json();\n//         dispatch(setCurrent(updatedAlbum));\n//         console.log(\"album updated!!!\");\n\n//         return updatedAlbum;\n\n//     } catch(err) {\n//         // errorNotifications(err);\n//     }\n// }\n\n\n\n// export const uploadPhoto = (data) => async (dispatch, getState) => {\n//     const {\n//         authentication: { token },\n//     } = getState();\n\n//     const userId = localStorage.getItem(USER_ID);\n\n//     try{\n//         const response = await fetch(`${baseUrl}/albums/`,\n//             {\n//                 method: \"POST\",\n//                 headers: {\n//                     Authorization: `Bearer ${token}`\n//                 },\n//                 body: data,\n//             }   \n//         );\n\n//         if(!response) {\n//             throw response;\n//         }\n\n//         const { updatedUser } = await response.json();\n//         dispatch(getUser());\n//         return updatedUser.imgUrl;\n\n//     } catch(err) {\n//         console.error(err);\n//     }\n\n//     console.log(\"PHOTO UPLOAD SUCCESSFUL!!!\");\n// }\n\n// export const deletePhoto = () => async (dispatch, getState) => {\n//     const {\n//         authentication: { token },\n//     } = getState();\n\n//     const body = { imgUrl: null };\n\n//     const userId = localStorage.getItem(USER_ID);\n\n//     try{\n//         const response = await fetch(`${baseUrl}/users/${userId}`,\n//             {\n//                 method: \"PATCH\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                     Authorization: `Bearer ${token}`\n//                 },\n//                 body: JSON.stringify(body),\n//             }   \n//         );\n\n//         if(response.status === 401) {\n//             window.location.href = \"/log-in\";\n//             return;\n//         }\n\n//         if(!response) {\n//             throw response;\n//         }\n\n//         const { updatedUser } = await response.json();\n//         dispatch(getUser());\n//         return updatedUser.imgUrl;\n\n//     } catch(err) {\n//         console.error(err);\n//     }\n// }","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Albums = ({ albums, handleEditAlbumBtn }) => {\n    return(\n        <>\n        {\n            albums.map((album) => {\n                return(\n                    <div key={album.id} className=\"album__holder\">\n                        <div className=\"album__artwork\" style={{backgroundImage: `url(${album.imgUrl})`}}>\n                            {\n                                !album.isPublished ?\n                                <div className=\"album__draft\">\n                                    draft\n                                </div> :\n                                null\n                            }\n                        </div>\n                        <div className=\"album__title\">\n                            {album.title}\n                        </div>\n                        <NavLink exact to={`/edit-album/${album.id}`} className=\"album__edit-link\">\n                            edit \n                        </NavLink>\n                    </div>\n                )\n            })\n        }\n        </>\n    )\n}\n\nexport default Albums;","import React from 'react';\n\nconst Following = ({ following }) => {\n    return(\n        <>\n        {\n            following.map((fol) => {\n                return(\n                    <div key={fol.id} className=\"following__photo-holder\">\n                        <div className=\"following__photo\" style={{backgroundImage: `url(${fol.imgUrl})`}}>\n                        </div>\n                        {fol.userName}\n                    </div>\n                )\n            })\n\n        }\n        </>\n    )\n}\n\nexport default Following;","import React, { useContext, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { BioFormContext } from './';\n\nimport * as userActions from '../../store/user';\n\n\n// export const BioForm = ({ bio, setBio, setBioFormVisible, handleSubmitBioBtn, updateBio, errors }) => {\n    // const { bio, handleCloseBioFormBtn, handleSubmitBioBtn, updateBio} = useContext(BioFormContext);\n    export const BioForm = ({ \n        bioFormVisible,\n        setBioFormVisible,\n        bioEditFormVisible,\n        setBioEditFormVisible }) => {\n\n        const dispatch = useDispatch();\n        const [bio, setBio] = useState(\"\");\n        const [errors, setErrors] = useState([]);\n\n        const updateBio = () => (e) => {\n            setBio(e.target.value);\n            console.log(\"BIO \", bio);\n        }   \n        \n        const handleCloseBioFormBtn = (e) => {\n            if(bioEditFormVisible) setBioEditFormVisible(false)\n            else setBioFormVisible(false)\n        }\n        \n        const handleSubmitBioBtn = (e) => {\n            e.preventDefault();\n            const data = { bio }\n            return dispatch(userActions.editBio(data))\n                .then((res) => handleCloseBioFormBtn())\n                .catch((res) => {\n                    if(res.data && res.data.errors) setErrors(res.data.errors);\n                })\n        }\n\n    return (\n        <form>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <textarea onChange={updateBio()} value={bio} className=\"artist-info__bio-text-field\">    \n            </textarea>\n            <button className=\"artist-info__submit-form-btn\" type=\"submit\" onClick={handleSubmitBioBtn}>Submit</button>\n            <button className=\"artist-info__cancel-btn\" onClick={handleCloseBioFormBtn}>Cancel</button>\n        </form>\n    )\n}\n\nexport default BioForm;\n","\nimport { fetch } from './csrf';\nimport { loadUser } from './session';\n// export const LOAD_GENRES = \"songcamp/genres/LOAD_GENRES\";\n\n// export const loadGenres = (list) => ({\n//     type: LOAD_GENRES,\n//     list\n// })\n\n\n// ==============================================================\n// EDIT BIO\n// ==============================================================\nexport const editBio = (data) => async (dispatch, getState) => {\n\n    const {\n        session: { user: { id } }\n    } = getState();\n\n    console.log(\"DATA!! \", data);\n    const res = await fetch(`/api/users/${id}`,\n            {\n                method: \"PATCH\",\n                body: JSON.stringify(data),\n            }   \n        );\n\n        await dispatch(loadUser(res.data.updatedUser));\n        console.log(\"EDITED BIO! \", res.data.updatedUser);\n        return res.data.updatedUser;\n}\n","import React, { useState } from 'react'\nimport BioForm from './BioForm'; \n\nexport const AddBioButton = () => {\n    \n    const [bioFormVisible, setBioFormVisible] = useState(false);\n\n    return (\n        <>\n        {\n            bioFormVisible ?\n            <BioForm \n                bioFormVisible={bioFormVisible}\n                setBioFormVisible={setBioFormVisible} /> : \n                <button \n                    onClick={() => setBioFormVisible(true)}\n                    className=\"artist-info__add-bio-btn\">\n                        add artist bio\n                </button>\n        }\n        </>\n    )\n}\n\nexport default AddBioButton;\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport BioForm from './BioForm';\n\nexport const BioSection = () => {\n    const user = useSelector(state => state.session.user);\n    const [bioEditFormVisible, setBioEditFormVisible] = useState(false);\n\n    return (\n        <>\n        {\n            bioEditFormVisible ?\n                <BioForm \n                    bioEditFormVisible={bioEditFormVisible}\n                    setBioEditFormVisible={setBioEditFormVisible}\n                /> :\n                <>\n                    <div className=\"artist-info__bio-header\">\n                        Bio \n                        <button className=\"artist-info__bio-edit-btn\" onClick={() => setBioEditFormVisible(true)}>\n                            edit\n                        </button>\n                    </div>\n                    {user.bio}\n                </>\n        }\n        </>\n    )\n}\n\nexport default BioSection;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nexport const Followers = ({ followers }) => {\n    return (\n        <>\n        {followers && followers.map((follower) => {\n                return(\n                    <NavLink key={follower.id} className=\"followers__link\" exact to=\"\">\n                        <div className=\"followers__photo-holder\">\n                            <div className=\"followers__photo\" style={{backgroundImage: `url(${follower.imgUrl})`}}>\n\n                            </div>\n                            {follower.userName}\n                        </div>\n                    </NavLink>\n                )\n            })\n        \n        }\n        </>\n    )\n}\n\nexport default Followers;\n","import React, {useEffect, useState} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as followsActions from '../../store/follows';\nimport * as albumsActions from '../../store/albums';\n// import * as userActions from '../../store/user';\n\n\nimport './dashboard.css';\nimport Albums from './Albums';\nimport Following from './Following';\nimport AddBioButton from './AddBioButton';\n// import BioForm from './BioForm';\nimport BioSection from './BioSection';\nimport Followers from './Followers';\n\nexport const BioFormContext = React.createContext();\n// Donec faucibus aliquam mi, et varius dui mattis sit amet. Sed interdum elit vel lacus condimentum, et dapibus augue consectetur. Ut libero ante, dictum sed ex id, dignissim aliquam arcu. Mauris venenatis pellentesque nisl quis bibendum. Fusce gravida, justo in bibendum ullamcorper, dolor justo tempor purus, non facilisis leo lorem eu augue.\nconst Dashboard = (\n    // user, \n    // followers, \n    // following, \n    // albums, \n    // getFollowers, \n    // getFollowing, \n    // getAllAlbumsForOneArtist, \n    // editBio \n) => {\n\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.session.user);\n    const followers = useSelector((state) => state.follows.followersList);\n    const following = useSelector((state) => state.follows.followingList);\n    const albums = useSelector((state) => state.albums.oneArtistAlbumsList);\n\n    useEffect(() => {\n        // getFollowers(user.id)\n        dispatch(followsActions.getFollowers(user.id))\n            .then(() =>  dispatch(followsActions.getFollowing(user.id)))\n            .then(() =>  dispatch(albumsActions.getAllAlbumsForOneArtist(user.id)))\n    }, [user.id])\n\n    const handleEditAlbumBtn = (albumId) => (e) => {\n        console.log(\"edit button clicked!\");\n    }\n    \n\n    if(!albums) {\n        console.log(\"NOT LOADED YET\")\n        return null;\n    }\n\n    return (\n        <div className=\"artist-page__holder\">\n            <div className=\"artist-page\">\n                <div className=\"left-column__holder\">\n                    <div className=\"artist-page__header-holder\">\n                        <h1 className=\"artist-page__header\">{user.artistName}</h1>\n                    </div>\n                    <div className=\"discography\">\n                        { \n                            albums ? \n                            null : \n                            <div className=\"discography__add-album-message\">\n                                Add an album and build your fanbase!\n                            </div>\n                            \n                        }\n    \n                        <div className=\"discography__header-holder\">\n                            <h3>DISCOGRAPHY</h3> \n                            <NavLink exact className=\"discography__add-link\" to=\"/create-album\">\n                                + add\n                            </NavLink>\n                        </div>\n    \n                        <div className=\"albums__holder\">\n                        {\n                            albums ? \n                            <Albums albums={albums} handleEditAlbumBtn={handleEditAlbumBtn} /> :\n                            (\n                                <>\n                                <div className=\"album__placeholder\"></div>\n                                <div className=\"album__placeholder\"></div>\n                                <div className=\"album__placeholder\"></div>\n                                <div className=\"album__placeholder\"></div>\n                                </>\n                            )\n                        }\n                        </div>\n                        \n                        {/* <div className=\"albums__holder\">\n                            <div className=\"album__placeholder\"></div>\n                            <div className=\"album__placeholder\"></div>\n                            <div className=\"album__placeholder\"></div>\n                            <div className=\"album__placeholder\"></div>\n                        </div> */}\n                    </div>\n\n                    <div className=\"follows__header-holder\">\n                        {/* <h3>FOLLOWING</h3> */}\n                        <h3 className=\"follows__following-header\">Following</h3>\n                        <h3 className=\"follows__followers-header\">Followers</h3>\n                    </div>\n                    <div className=\"follows__holder\">\n                        <div className=\"following__holder\">\n                            {following ?\n                                <Following following={following} /> :\n                                ( \n                                    <>\n                                    <div className=\"following__placeholder\"></div>\n                                    <div className=\"following__placeholder\"></div>\n                                    <div className=\"following__placeholder\"></div>\n                                    <div className=\"following__placeholder\"></div>\n                                    </>\n                                )\n                            }\n                        </div>\n                        <div className=\"followers__holder\">\n                            <Followers followers={followers}/>\n\n                        {/* <div className=\"followers__photo-holder\">\n                                <div className=\"followers__photo\">\n\n                                </div>\n                                test\n                            </div>\n                            <div className=\"followers__photo-holder\">\n                                <div className=\"followers__photo\">\n\n                                </div>\n                                test\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n\n                \n                <div className=\"right-column__holder\">\n                    { user.imgUrl ?\n                            <div className=\"artist-info__photo\" style={{backgroundImage: `url(${user.imgUrl})`}} >\n                            </div> :\n                            <button className=\"artist-info__photo-placeholder\">add artist photo</button>\n                    }\n                    <div className=\"artist-info__name\">\n                        {user.artistName}\n                    </div>\n\n                    <div className=\"artist-info__bio-holder\">\n                        {\n                            user.bio ? \n                            (\n                                <BioSection/>\n                            ) :\n                            <AddBioButton/>\n\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;","import { fetch } from './csrf';\n\n// import { errorNotifications } from \"../error-notifications.js\";\nexport const SET_CURRENT = \"songcamp/album/SET_CURRENT\";\nexport const REMOVE_CURRENT = \"songcamp/album/REMOVE_ALBUM\";\n\nexport const setCurrent = (current) => ({\n    type: SET_CURRENT,\n    current\n})\n\nexport const removeCurrent = () => ({\n    type: REMOVE_CURRENT,\n})\n\n// ========================================================================================\n// GET ONE ALBUM\n// ========================================================================================\nexport const getOneAlbum = (id) => async (dispatch, getState) => {\n\n    console.log(\"GET ONE ALBUM\");\n\n    const res = await fetch(`/api/albums/${id}`)\n    \n    console.log(\"ONE ALBUM!!! \", res.data.album)\n    dispatch(setCurrent(res.data.album));\n\n    return res;\n}\n\n\n// ========================================================================================\n// CREATE ALBUM\n// ========================================================================================\nexport const createAlbum = (payload) => async (dispatch, getState) => {\n    console.log(\"INSIDE CREATE ALBUM\")\n    const res = await fetch(`/api/albums`, {\n        method: \"POST\",\n        body: payload\n    })\n\n    if(res.status === 401) {\n        window.location.href = \"/log-in\";\n        return;\n    }\n\n    const albumId = res.data.newAlbum.id;\n    await dispatch(getOneAlbum(albumId));\n    console.log(\"new album created!!!\");\n\n    return res;\n}\n\n\n// ========================================================================================\n// EDIT ALBUM\n// ========================================================================================\nexport const editAlbum = (payload, albumId) => async (dispatch, getState) => {\n    console.log(\"INSIDE EDIT ALBUM\")\n\n    const res = await fetch(`/api/albums/${albumId}`, {\n        method: \"PUT\",\n        body: payload\n    })\n\n    // if(response.status === 401) {\n    //     window.location.href = \"/log-in\";\n    //     return;\n    // }\n\n    console.log(\"RES.DATA.UPDATEDALBUM!!! \", res.data.album);\n    await dispatch(getOneAlbum(albumId));\n\n    return res;\n}\n\n\n// ========================================================================================\n// DELETE ALBUM ARTWORK ONLY!\n// ========================================================================================\nexport const deleteAlbumArtwork = (payload, albumId) => async (dispatch) => {\n    console.log(\"INSIDE EDIT ALBUM\")\n\n    const res = await fetch(`/api/albums/${albumId}/delete-album-art`, {\n        method: \"PATCH\",\n        body: JSON.stringify(payload),\n    })\n\n    console.log(\"ALBUM WITH ARTWORK DELETED! \", res.data.album);\n    await dispatch(getOneAlbum(albumId));\n\n    return res;\n}\n\n\n// ========================================================================================\n// PUBLISH ALBUM\n// ========================================================================================\nexport const publishAlbum = (payload, albumId) => async (dispatch) => {\n    console.log(\"PUBLISH ALBUM!!\")\n    const res = await fetch(`/api/albums/${albumId}/publish`, {\n        method: \"PATCH\",\n        body: JSON.stringify(payload),\n    })\n\n    await dispatch(getOneAlbum(albumId));\n\n    return res;\n}\n\n\n// ========================================================================================\n// REMOVE ALBUM\n// ========================================================================================\nexport const removeAlbum = (id) => async (dispatch, getState) => {\n\n    console.log(\"REMOVE ALBUM\");\n    dispatch(removeCurrent());\n}\n\n\n// ========================================================================================\n// ALBUM REDUCER\n// ========================================================================================\nexport function albumReducer(state = {}, action) {\n    switch (action.type) {\n      case SET_CURRENT: {\n        return {\n          ...state,\n          current: action.current,\n        };\n      }\n  \n      case REMOVE_CURRENT: {\n        return {\n          ...state,\n          current: null,\n        };\n      }\n\n      default:\n        return state;\n    }\n}\n\nexport default albumReducer;","import React, { useState  } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as albumActions from '../../store/album';\n\nconst AlbumForm = ({ \n    albumTitle, \n    setAlbumTitle, \n    description, \n    setDescription, \n    credits,\n    setCredits,\n    img,\n    setImg,\n    isPublished,\n    setAlbumIsLoading,\n    setCurrentIdx }) => {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.session.user)\n    const album = useSelector((state) => state.album.current)\n    const [albumFormErrors, setAlbumFormErrors] = useState([]);\n\n// UPDATE FORM PROPERTY\n    const updateProperty = (property) => (e) => {\n        e.preventDefault();\n        property(e.target.value);\n    }\n\n// HANDLE CREATE ALBUM BUTTON\n    const handleCreateAlbumSubmitBtn = (e) => {\n        e.preventDefault();\n        setAlbumIsLoading(true);\n\n        const data = new FormData();\n        data.append(\"title\", albumTitle);\n        data.append(\"description\", description);\n        data.append(\"credits\", credits);\n        data.append(\"isPublished\", isPublished);\n        data.append(\"file\", img);\n        data.append(\"artistId\", user.id);\n\n        (async () => {\n            try{\n                const res = await dispatch(albumActions.createAlbum(data))\n                console.log(\"RES FOR NEW ALBUM \", res.data.newAlbum);\n                await setCurrentIdx(1);\n                await setImg(\"\");\n                await setAlbumFormErrors([]);\n                await setAlbumIsLoading(false);\n            } catch(res) {\n                await setAlbumIsLoading(false);\n                if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n    }\n\n// HANDLE EDIT ALBUM BUTTON\n    const handleEditAlbumBtn = (e) => {\n        e.preventDefault();\n        setAlbumIsLoading(true);\n\n        const data = new FormData();\n        data.append(\"title\", albumTitle);\n        data.append(\"description\", description);\n        data.append(\"credits\", credits);\n        data.append(\"isPublished\", isPublished);\n        data.append(\"file\", img);\n        data.append(\"artistId\", user.id);\n\n        (async () => {\n            try{\n                await dispatch(albumActions.editAlbum(data, album.id));\n                await setImg(\"\");\n                await setAlbumFormErrors([]);\n                await setAlbumIsLoading(false);\n            } catch(res) {\n                setAlbumIsLoading(false);\n                if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n    }\n\n    return (\n        <div className=\"album-edit-page__album-detail-form\" >\n            <ul className=\"errors\">\n                {albumFormErrors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label className=\"album-edit-page__album-title-label\">ALBUM TITLE</label>\n            <input className=\"album-edit-page__album-title-input\" \n                type=\"text\" name=\"albumTitle\" \n                value={albumTitle}\n                onChange={updateProperty(setAlbumTitle)}>\n            </input>\n            <label>upload album art:</label>\n            <input className=\"album-edit-page__upload-input\"\n                type=\"file\"\n                onChange={(e) => setImg(e.target.files[0])}\n            />\n            <label>about this album:</label>\n            <textarea \n                name=\"description\" \n                value={description} \n                onChange={updateProperty(setDescription)}>\n            </textarea>\n            <label>credits:</label>\n            <textarea \n                name=\"credits\" \n                value={credits}\n                onChange={updateProperty(setCredits)}>\n            </textarea>\n            \n            { !album ? \n                <>\n                    <span className=\"album-edit-page__submit-instruction\">Submit to start adding songs!</span>\n                    <button type=\"submit\" className=\"album-edit-page__submit-btn\" onClick={handleCreateAlbumSubmitBtn}>\n                        Submit\n                    </button> \n                </> :\n                <button type=\"submit\" className=\"album-edit-page__edit-btn\" onClick={handleEditAlbumBtn}>Edit</button>\n            }\n        </div>\n    )\n}\n\nexport default AlbumForm;","import { fetch } from './csrf';\n// import errorNotifications from \"../../errorNotifications\";\nimport { getOneAlbum } from \"./album\";\n\n\n// ========================================================================================\n// CREATE TRACK FOR AN ALBUM\n// ========================================================================================\nexport const createTrack = (payload) => async (dispatch, getState) => {\n    console.log(\"INSIDE CREATE TRACK\")\n\n    const res = await fetch(`/api/tracks`, {\n        method: \"POST\",\n        body: payload\n    })\n\n    // if(res.status === 401) {\n    //     window.location.href = \"/log-in\";\n    //     return;\n    // }\n\n    console.log(`GETTING ALBUM WITH ID ${res.data.newTrack.albumId}`)\n    await dispatch(getOneAlbum(res.data.newTrack.albumId));\n\n    return res;\n}\n\n\n// ========================================================================================\n// EDIT TRACK TITLE FOR AN ALBUM\n// ========================================================================================\nexport const editTrackTitle = (payload, trackId) => async (dispatch, getState) => {\n    console.log(\"INSIDE CREATE TRACK\")\n\n    const res = await fetch(`/api/tracks/${trackId}`, {\n        method: \"PATCH\",\n        body: payload\n    })\n\n    console.log(`GETTING ALBUM WITH ID ${res.data.updatedTrack.albumId}`)\n    await dispatch(getOneAlbum(res.data.updatedTrack.albumId));\n\n    return res;\n}\n\n\n// ========================================================================================\n// DELETE ALBUM TRACK\n// ========================================================================================\nexport const deleteTrack = (trackId) => async (dispatch, getState) => {\n    console.log(\"INSIDE EDIT ALBUM\")\n\n    const {\n        album: { current: { id } }\n    } = getState();\n\n    const res = await fetch(`/api/tracks/${trackId}`, {\n        method: \"DELETE\",\n    })\n\n    await dispatch(getOneAlbum(id));\n\n    return res;\n}","import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as tracksActions from '../../store/tracks';\n\nconst TrackForm = (\n    { \n        currentIdx,\n        tracksData,\n        setTracksData,\n        trackCount,\n        setTrackIsLoading,\n        setUploadedTracksVisible,\n        setCurrentIdx,\n        setTrackCount,\n        currentTrackId,\n    }) => {\n\n    const dispatch = useDispatch();\n    const album = useSelector((state) => state.album.current)\n    const [trackFormErrors, setTrackFormErrors] = useState([]);\n    const keyName = `title${currentIdx}`;\n    const trackUrl = `track${currentIdx}Url`;\n    console.log(\"CURRENT IDX\", currentIdx);\n\n// UPDATE TRACK FORM PROPERTY\n    const updateTrackFormProperty = (property, keyName) => (e) => {\n        console.log(\"IDX VALUE!!! \", keyName)\n        property(prevState => ({...prevState, [keyName]: e.target.value}));\n        console.log(\"title1!!! \",  tracksData[keyName]);\n    }\n\n// HANDLE UPLOAD TRACK BUTTON \n    const handleUploadTrackBtn = (e) => {\n        e.preventDefault();\n        setTrackIsLoading(true);\n\n        const data = new FormData();\n\n        data.append(\"title\", tracksData.title1);\n        data.append(\"albumId\", album.id);\n        data.append(\"allowDownload\", false);\n        data.append(\"file\", tracksData.track1Url);\n\n        try {\n            (async () => {\n                const newTrack = await dispatch(tracksActions.createTrack(data))\n                await setUploadedTracksVisible(true); \n                await setTracksData(prevState => ({...prevState, track1Url: ''}));\n                await setTracksData(prevState => ({...prevState, title1: ''}));\n                await setTrackCount(trackCount+1);\n                await setCurrentIdx(1);\n                await setTrackIsLoading(false);\n                console.log(\"TRACKS DATA!!!!! \", tracksData)\n            })()\n        } catch(res) {\n            setTrackIsLoading(false);\n            if (res.data && res.data.errors) setTrackFormErrors(res.data.errors);\n        }\n    }\n\n// HANDLE EDIT TRACK BUTTON\n    const handleEditTrackTitleBtn = (e) => {\n        e.preventDefault();\n        const data = new FormData();\n\n        data.append(\"title\", tracksData[`title${currentIdx}`]);\n        data.append(\"albumId\", album.id);\n        data.append(\"allowDownload\", false);\n\n        (async () => {\n            await dispatch(tracksActions.editTrackTitle(data, currentTrackId))\n            await setCurrentIdx(1);\n        })()\n    }\n\n    return (\n        <form \n            onSubmit={handleUploadTrackBtn} \n            className=\"album-edit-page__track-form\" \n            // style={{ marginTop: `${193+(currentIdx - 2)*(2*(currentIdx - 2) + 74)}px` }}\n            style={{ marginTop: currentIdx > 1 ? \n                    `${ (currentIdx-2)*70 + 245}px` :\n                    trackCount === 0 ?\n                        `245px` :\n                    `${(trackCount)*70 + 245}px`\n            }}>\n            <label className=\"album-edit-page__track-title-input\">TRACK TITLE</label>\n            <input\n                type=\"text\" name=\"trackTitle\" \n                value={tracksData[keyName]}\n                placeholder={tracksData[keyName]} \n                onChange={updateTrackFormProperty(setTracksData, keyName)}\n            >\n            </input>\n\n            {currentIdx === 1 ? \n                <>\n                    <label>upload track:</label>\n                    <input className=\"album-edit-page__upload-input\"\n                        type=\"file\"\n                        onChange={(e) => \n                            setTracksData(prevState => \n                                ({...prevState, [trackUrl]: e.target.files[0]}))}\n                    />\n                    <button className=\"album-edit-page__submit-btn\" type=\"submit\">Submit</button>\n                </> :\n                <button onClick={handleEditTrackTitleBtn} className=\"album-edit-page__edit-btn\" type=\"submit\">Edit</button>\n            }\n        </form>\n    )\n}\n\nexport default TrackForm;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// import * as albumActions from '../../store/album';\nimport * as tracksActions from '../../store/tracks';\n// import AlbumForm from './AlbumForm';\n// import TrackForm from './TrackForm';\n// import AddTrackSection from './AddTrackSection';\n// import CircularIndeterminate from './CircularIndeterminate';\n\nconst UploadedTracks = ({\n    tracksData, \n    setTracksData, \n    currentIdx, \n    setCurrentIdx, \n    setCurrentTrackId,\n    trackCount,\n    setTrackCount, }) => {\n\n    // if(!album) {\n    //     return null;\n    // }\n    \n    const dispatch = useDispatch();\n    const album = useSelector((state) => state.album.current)\n    const tracks = album.tracks;\n    const [trackDeleteErrors, setTrackDeleteErrors] = useState({});\n\n// HANDLE DELETE TRACK BUTTON\n    const handleDeleteTrackBtn = (trackId) => (e) => {\n        e.preventDefault();\n        try{\n            (async () => {\n                const res = await dispatch(tracksActions.deleteTrack(trackId))\n                await setTrackCount(trackCount - 1);\n                await setCurrentIdx(1);\n                console.log(\"DELETED! \", res);\n            })()\n        } catch(res) {\n            if (res.data && res.data.errors) setTrackDeleteErrors(res.data.errors);\n        }\n    }\n\n    return (\n        <>\n            {tracks.map((track, idx) => {\n                const keyName = `title${idx+2}`;\n                console.log(\"KEYNAME\", keyName)\n                console.log(\"TRACKS DATA!!! \", tracksData);\n                return (\n                    <div key={track.id} onClick={() => \n                            {\n                                setCurrentIdx(idx+2);\n                                setCurrentTrackId(track.id);\n                                setTracksData(prevState => ({...prevState, [keyName]: track.title}));\n                            }\n                        }\n                        className={\n                            (currentIdx === (idx+2) ) ?\n                            (\"album-edit-page__track-holder active\") : \n                            (\"album-edit-page__track-holder\")\n                        }\n                        \n                    >\n                        <div className=\"album-edit-page__track-title\"> \n                            <span>{idx+1}.</span>\n                            {\n                                tracksData[keyName] && (currentIdx === (idx+2)) ? \n                                tracksData[keyName] : \n                                (\n                                    (currentIdx !== (idx+2)) ? \n                                    track.title :\n                                    null\n                                )   \n                            }\n                        </div>\n                        <button className=\"album-edit-page__track-delete-btn\" onClick={handleDeleteTrackBtn(track.id)}>delete</button>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n\nexport default UploadedTracks;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {/* <LinearProgress /> */}\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React from 'react'\nimport LinearIndeterminate from './LinearIndeterminate';\n\nexport const AddTrackSection = ({ \n    currentIdx,\n    setCurrentIdx,\n    addTrackIdx,\n    trackIsLoading, }) => {\n\n    return (\n        <div onClick={() => setCurrentIdx(1)}\n            className={\n                (currentIdx === addTrackIdx) ?\n                (\"album-edit-page__track-select active\") : \n                (\"album-edit-page__track-select\")\n            }\n        >\n            {/* <div className=\"album-edit-page__track-title\">  */}\n                <div className=\"album-edit-page__add-track-text\">\n                    add track\n                </div>\n            {/* </div> */}\n\n            {trackIsLoading ?\n                <div className=\"album-edit-page__progress-bar-holder \">\n                    <span>Loading...</span>\n                    <LinearIndeterminate />\n                </div> :\n                null\n            }\n        </div>\n    )\n}\n\nexport default AddTrackSection;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport * as albumActions from '../../store/album';\nimport './album-edit-page.css';\nimport './upload-form.css';\nimport AlbumForm from './AlbumForm';\nimport TrackForm from './TrackForm';\nimport UploadedTracks from './UploadedTracks';\nimport AddTrackSection from './AddTrackSection';\nimport CircularIndeterminate from './CircularIndeterminate';\n\nconst CreateAlbumPage = () => {\n        \n    const dispatch = useDispatch();\n\n    // const user = useSelector((state) => state.session.user)\n    const album = useSelector((state) => state.album.current)\n\n    const [tracksData, setTracksData] = useState({});\n    const [currentIdx, setCurrentIdx] = useState(0);\n    const [albumTitle, setAlbumTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState(\"\");\n    const [img, setImg] = useState(\"\");\n    const [isPublished, setIsPublished] = useState(false);\n    const [uploadedTracksVisible, setUploadedTracksVisible] = useState(false);\n    const [trackCount, setTrackCount] = useState(0);\n    const [currentTrackId, setCurrentTrackId] = useState(0);\n    const [albumIsLoading, setAlbumIsLoading] = useState(false);\n    const [trackIsLoading, setTrackIsLoading] = useState(false);\n    const albumDetailSelectIdx = 0;\n    const addTrackIdx = 1;\n    // let albumId;\n        // dispatch(albumActions.createAlbum(data))\n    // dispatch(albumActions.editAlbum(data, albumId))\n//     dispatch(albumActions.deleteAlbumArtwork(data, albumId))\n//    dispatch(albumActions.publishAlbum(data, albumId))\n//     dispatch(tracksActions.createTrack(data))\n//     dispatch(tracksActions.editTrackTitle(data, trackId))\n//    dispatch(tracksActions.deleteTrack(trackId))\n    \n    console.log(\"TRACK COUNT!!! \", trackCount);\n    console.log(\" TRACK ID!!! \", currentTrackId);\n \n    //Differs from EditAlbumPage =====================================\n    useEffect(() => {\n        if(album) {\n            dispatch(albumActions.removeAlbum())\n        }\n    },[album, dispatch])\n\n    const handleAlbumDetailSelect = (e) => {\n        e.preventDefault();\n        (async () => {\n            await setCurrentIdx(0)\n            if(album) {\n                await setAlbumTitle(album.title);\n                await setDescription(album.description);\n                await setCredits(album.credits);\n            }\n        })()\n    }\n\n    // const updateProperty = (property) => (e) => {\n    //     e.preventDefault();\n    //     property(e.target.value);\n    // }\n\n\n// HANDLE DELETE ALBUM ARTWORK BUTTON \n    const handleDeleteAlbumArtworkBtn = (e) => {\n        e.preventDefault();\n        const imgUrl = '';\n        const data = { imgUrl };\n\n        (async () => {\n            try{\n                await dispatch(albumActions.deleteAlbumArtwork(data, album.id));\n                // e.target.value = null;\n            } catch(res) {\n                // if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n    }\n\n// HANDLE PUBLISH ALBUM BUTTON\n    const handlePublishBtn = (e) => {\n        e.preventDefault();\n\n        //ASK ABOUT THIS??????\n        // setIsPublished(true);\n        const data = {\"isPublished\": true};\n        \n        (async () => {\n            try{\n                await dispatch(albumActions.publishAlbum(data, album.id))\n                await setIsPublished(true);\n            } catch(res) {\n                // if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n\n    }\n\n    if(album) {\n\n        console.log(!!album.imgUrl)\n    }\n    return (\n        <div className=\"album-edit-page__holder\">\n            <div className=\"album-edit-page__left-col\">\n                <div onClick={handleAlbumDetailSelect} className =\n                    { (currentIdx === albumDetailSelectIdx) ? \n                    (\"album-edit-page__album-select active\") : \n                    (\"album-edit-page__album-select\")} >\n                    \n                    {/* ADD CONFIRM BUTTON LATER!! =============================================================*/}\n                    {album && album.imgUrl ? \n                            (\n                                <div className=\"album-edit-page__album-art\" style={{backgroundImage: `url(${album.imgUrl})`}}>\n                                    <button type=\"submit\" onClick={handleDeleteAlbumArtworkBtn} className=\"album-edit-page__artwork-delete-btn\">\n                                        <i className=\"fas fa-times\"></i>\n                                    </button>   \n                                </div>\n                            ) : \n                            (\n                                albumIsLoading ? \n                                <div className=\"album-edit-page__album-placeholder\">\n                                    <span>Loading...</span>\n                                    <CircularIndeterminate />\n                                </div> :\n                                <div className=\"album-edit-page__album-placeholder\"></div>\n                            )\n                    }\n                    <div className=\"album-edit-page__album-details-holder\"> \n                        {album && album.title && (currentIdx !== albumDetailSelectIdx) ?\n                            <h4>{ album.title }</h4> :\n                            albumTitle ? \n                                <h4>{ albumTitle }</h4> :\n                                <h4>Untitled Album</h4>\n                        }\n                        by <span>The Pojos</span>\n                    </div>\n                </div>\n\n                <h4 className=\"album-edit-page__tracks-header\">TRACKS</h4>\n                \n                {uploadedTracksVisible && album && album.tracks ? \n                    (\n                        <UploadedTracks \n                            tracksData={tracksData}\n                            setTracksData={setTracksData}\n                            currentIdx={currentIdx}\n                            setCurrentIdx={setCurrentIdx}\n                            setCurrentTrackId={setCurrentTrackId}\n                            setTrackCount={setTrackCount}\n                        />\n                    ) : null\n                }\n\n                {album ?\n\n                    <AddTrackSection \n                        currentIdx={currentIdx}\n                        setCurrentIdx={setCurrentIdx}\n                        addTrackIdx={addTrackIdx}\n                        tracksData={tracksData}\n                        trackIsLoading={trackIsLoading}/> :\n                    null\n                }\n        \n                {album && album.isPublished ?\n                    <>\n                        <span className=\"album-edit-page__publish-message\">\n                            Your album is LIVE! Take a look \n                            <NavLink exact to={`/albums/${album.id}`}> here</NavLink>\n                        </span>\n                        <button className=\"album-edit-page__publish-btn\" onClick={handlePublishBtn}>\n                            Published <CheckIcon style={{ fontSize: 14 }}/>\n                        </button> \n                    </> :\n                    <>\n                        <span className=\"album-edit-page__publish-message\">Album will be saved as a draft until it's published</span>\n                        <button className=\"album-edit-page__publish-btn\" onClick={handlePublishBtn}>\n                            Publish\n                        </button>\n                    </>\n                }\n\n            </div>\n\n            <div className=\"album-edit-page__right-col\">\n                {\n                    (currentIdx === albumDetailSelectIdx) ? \n                        (\n                            <AlbumForm \n                                albumTitle={albumTitle}\n                                setAlbumTitle={setAlbumTitle}\n                                img={img}\n                                setImg={setImg}\n                                description={description}\n                                setDescription={setDescription}\n                                credits={credits}\n                                setCredits={setCredits}\n                                isPublished={isPublished}\n                                setAlbumIsLoading={setAlbumIsLoading}\n                                setCurrentIdx={setCurrentIdx}\n                                />\n                        ) : null\n                }\n                {\n                    (currentIdx >= addTrackIdx) ? \n                    (\n                        <TrackForm \n                            currentIdx={currentIdx}\n                            trackCount={trackCount}\n                            tracksData={tracksData}\n                            setTracksData={setTracksData}\n                            setTrackIsLoading={setTrackIsLoading}\n                            setUploadedTracksVisible={setUploadedTracksVisible}\n                            setCurrentIdx={setCurrentIdx}\n                            setTrackCount={setTrackCount}\n                            currentTrackId={currentTrackId}\n                            />\n                    ) : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default CreateAlbumPage;","import React from 'react';\n\n\nconst AlbumForm = ({ \n    album,\n    updateProperty, \n    albumTitle, \n    setAlbumTitle, \n    description, \n    setDescription, \n    setImg,\n    credits,\n    setCredits,\n    handleEditAlbumBtn,\n    albumFormErrors }) => {\n    \n    return (\n        <div className=\"album-edit-page__album-detail-form\" >\n            <ul className=\"errors\">\n                {albumFormErrors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label className=\"album-edit-page__album-title-label\">ALBUM TITLE</label>\n            <input className=\"album-edit-page__album-title-input\" \n                type=\"text\" name=\"albumTitle\" \n                value={albumTitle}\n                onChange={updateProperty(setAlbumTitle)}>\n            </input>\n            <label>upload album art:</label>\n            <input className=\"album-edit-page__upload-input\"\n                type=\"file\"\n                onChange={(e) => setImg(e.target.files[0])}\n            />\n            <label>about this album:</label>\n            <textarea \n                name=\"description\" \n                value={description} \n                onChange={updateProperty(setDescription)}>\n            </textarea>\n            <label>credits:</label>\n            <textarea \n                name=\"credits\" \n                value={credits}\n                onChange={updateProperty(setCredits)}>\n            </textarea>\n            \n            { !album ? \n                <>\n                    {/* <span className=\"album-edit-page__submit-instruction\">Submit to start adding songs!</span>\n                    <button type=\"submit\" className=\"album-edit-page__submit-btn\" onClick={handleCreateAlbumSubmitBtn}>\n                        Submit\n                    </button>  */}\n                    null\n                </> :\n                <button type=\"submit\" className=\"album-edit-page__edit-btn\" onClick={handleEditAlbumBtn}>Edit</button>\n            }\n        </div>\n    )\n}\n\nexport default AlbumForm;","import React, {useState} from 'react';\nimport albumReducer from '../../store/album';\n\nconst TrackForm = (\n    { \n        album,\n        currentIdx,\n        handleUploadTrackBtn, \n        tracksData,\n        setTracksData,\n        updateTrackFormProperty,\n        // trackCount,\n        handleEditTrackTitleBtn\n    }) => {\n\n    const keyName = `title${currentIdx}`;\n    const trackUrl = `track${currentIdx}Url`;\n    console.log(\"CURRENT IDX\", currentIdx);\n    return (\n        <form \n            onSubmit={handleUploadTrackBtn} \n            className=\"album-edit-page__track-form\" \n            // style={{ marginTop: `${193+(currentIdx - 2)*(2*(currentIdx - 2) + 74)}px` }}\n            style={{ marginTop: currentIdx > 1 ? \n                    `${ (currentIdx-2)*70 + 245}px` :\n                     album.tracks.length === 0 ?\n                        `245px` :\n                    `${(album.tracks.length)*70 + 245}px`\n            }}>\n            <label className=\"album-edit-page__track-title-input\">TRACK TITLE</label>\n            <input\n                type=\"text\" name=\"trackTitle\" \n                value={tracksData[keyName]}\n                placeholder={tracksData[keyName]} \n                onChange={updateTrackFormProperty(setTracksData, keyName)}\n            >\n            </input>\n\n            {currentIdx === 1 ? \n                <>\n                    <label>upload track:</label>\n                    <input className=\"album-edit-page__upload-input\"\n                        type=\"file\"\n                        onChange={(e) => setTracksData(prevState => ({...prevState, [trackUrl]: e.target.files[0]}))}\n                    />\n                    <button className=\"album-edit-page__submit-btn\" type=\"submit\">Submit</button>\n                </> :\n                <button onClick={handleEditTrackTitleBtn} className=\"album-edit-page__edit-btn\" type=\"submit\">Edit</button>\n            }\n        </form>\n    )\n}\n\nexport default TrackForm;","import React, {useState} from 'react';\n\nconst UploadedTracks = ({\n    album, \n    tracksData, \n    setTracksData, \n    currentIdx, \n    setCurrentIdx, \n    handleDeleteTrackBtn,\n    setCurrentTrackId }) => {\n    // if(!album) {\n    //     return null;\n    // }\n    // const [uploadedTrackClicked, setUploadedTrackClicked] = useState(false)\n    // if(!album) {\n    //     return null;\n    // }\n\n    const tracks = album.tracks;\n    return (\n        <>\n            {tracks.map((track, idx) => {\n                const keyName = `title${idx+2}`;\n                console.log(\"KEYNAME\", keyName)\n                console.log(\"TRACKS DATA!!! \", tracksData);\n                // setTracksData(prevState => ({...prevState, [keyName]: track.title}));\n                return (\n                    <div key={track.id} onClick={() => \n                            {\n                                setCurrentIdx(idx+2);\n                                setCurrentTrackId(track.id);\n                                setTracksData(prevState => ({...prevState, [keyName]: track.title}));\n                            }\n                        }\n                        className={\n                            (currentIdx === (idx+2) ) ?\n                            (\"album-edit-page__track-holder active\") : \n                            (\"album-edit-page__track-holder\")\n                        }\n                        \n                    >\n                        <div className=\"album-edit-page__track-title\"> \n                            <span>{idx+1}.</span>\n                            {\n                                tracksData[keyName] && (currentIdx === (idx+2)) ? \n                                tracksData[keyName] : \n                                (\n                                    (currentIdx !== (idx+2)) ? \n                                    track.title :\n                                    null\n                                )   \n                            }\n                        </div>\n                        <button className=\"album-edit-page__track-delete-btn\" onClick={handleDeleteTrackBtn(track.id)}>delete</button>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n\nexport default UploadedTracks;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {/* <LinearProgress /> */}\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React from 'react'\nimport LinearIndeterminate from './LinearIndeterminate';\n\nexport const AddTrackSection = ({ \n    currentIdx,\n    setCurrentIdx,\n    addTrackIdx,\n    trackIsLoading, }) => {\n\n    return (\n        <div onClick={() => setCurrentIdx(1)}\n            className={\n                (currentIdx === addTrackIdx) ?\n                (\"album-edit-page__track-select active\") : \n                (\"album-edit-page__track-select\")\n            }\n        >\n            {/* <div className=\"album-edit-page__track-title\">  */}\n                <div className=\"album-edit-page__add-track-text\">\n                    add track\n                </div>\n            {/* </div> */}\n\n            {trackIsLoading ?\n                <div className=\"album-edit-page__progress-bar-holder \">\n                    <span>Loading...</span>\n                    <LinearIndeterminate />\n                </div> :\n                null\n            }\n        </div>\n    )\n}\n\nexport default AddTrackSection;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useParams } from 'react-router-dom';\nimport CheckIcon from '@material-ui/icons/Check';\n// import classNames from 'classnames';\n\n// import {USER_ID} from '../store/actions/authentication';\nimport './album-edit-page.css';\nimport './upload-form.css';\nimport AlbumForm from './AlbumForm';\nimport TrackForm from './TrackForm';\nimport UploadedTracks from './UploadedTracks';\nimport AddTrackSection from './AddTrackSection';\nimport CircularIndeterminate from './CircularIndeterminate';\n\nimport * as albumActions from '../../store/album';\n\n\nconst EditAlbumPage = ({ \n    user, \n    // getOneAlbum, \n    editAlbum, \n    deleteAlbumArtwork, \n    publishAlbum,\n    album, \n    createTrack,\n    editTrackTitle,\n    deleteTrack }) => {\n\n    const [albumTitle, setAlbumTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState(\"\");\n    const [img, setImg] = useState(\"\");\n    const [isPublished, setIsPublished] = useState(false);\n    const [tracksData, setTracksData] = useState({});\n    // const [uploadedTracksVisible, setUploadedTracksVisible] = useState(false);\n    // const [uploadedTrackClicked, setUploadedTrackClicked] = useState(false);\n    const [currentIdx, setCurrentIdx] = useState(0);\n    const [albumFormErrors, setAlbumFormErrors] = useState([]);\n    const [trackFormErrors, setTrackFormErrors] = useState([]);\n    const [trackCount, setTrackCount] = useState(0);\n    const [currentTrackId, setCurrentTrackId] = useState(0);\n    const [albumIsLoading, setAlbumIsLoading] = useState(false);\n    const [trackIsLoading, setTrackIsLoading] = useState(false);\n    const albumDetailSelectIdx = 0;\n    const addTrackIdx = 1;\n\n    const dispatch = useDispatch();\n    let { albumId } = useParams();\n\n    console.log(\"TRACK COUNT!!! \", trackCount);\n    console.log(\"CURRENT TRACK ID!!! \", currentTrackId);\n \n    useEffect(() => {\n        (async () => {\n            // await getOneAlbum(albumId);\n            await dispatch(albumActions.getOneAlbum(albumId));\n            // if(album) {\n            //     setTrackCount(album.tracks.length)\n            // }\n        })()\n    }, [albumId, dispatch])\n\n    const handleAlbumDetailSelect = (e) => {\n        e.preventDefault();\n        (async () => {\n            await setCurrentIdx(0)\n            if(album) {\n                await setAlbumTitle(album.title);\n                await setDescription(album.description);\n                await setCredits(album.credits);\n            }\n        })()\n    }\n\n    const updateProperty = (property) => (e) => {\n        e.preventDefault();\n        property(e.target.value);\n    }\n\n\n    const updateTrackFormProperty = (property, keyName) => (e) => {\n        console.log(\"IDX VALUE!!! \", keyName)\n        property(prevState => ({...prevState, [keyName]: e.target.value}));\n        console.log(\"title1!!! \",  tracksData[keyName]);\n    }\n\n    // const handleCreateAlbumSubmitBtn = (e) => {\n    //     e.preventDefault();\n    //     setAlbumIsLoading(true);\n\n    //     const data = new FormData();\n    //     data.append(\"title\", albumTitle);\n    //     data.append(\"description\", description);\n    //     data.append(\"credits\", credits);\n    //     data.append(\"isPublished\", isPublished);\n    //     data.append(\"file\", img);\n    //     data.append(\"artistId\", user.id);\n\n\n    //     (async () => {\n    //         try{\n    //             const res = await createAlbum(data);\n    //             console.log(\"RES FOR NEW ALBUM \", res.data.newAlbum);\n    //             await setCurrentIdx(1);\n    //             await setImg(\"\");\n    //             await setAlbumFormErrors([]);\n    //             await setAlbumIsLoading(false);\n    //         } catch(res) {\n    //             if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n    //         }\n    //     })()\n    // }\n\n\n    const handleEditAlbumBtn = (e) => {\n        e.preventDefault();\n        setAlbumIsLoading(true);\n\n        const data = new FormData();\n        data.append(\"title\", albumTitle);\n        data.append(\"description\", description);\n        data.append(\"credits\", credits);\n        data.append(\"isPublished\", album.isPublished);\n        data.append(\"file\", img);\n        data.append(\"artistId\", user.id);\n\n        (async () => {\n            try{\n                await editAlbum(data, album.id);\n                await setImg(\"\");\n                await setAlbumFormErrors([]);\n                await setAlbumIsLoading(false);\n            } catch(res) {\n                setAlbumIsLoading(false);\n                if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n    }\n\n\n    const handleDeleteAlbumArtworkBtn = (e) => {\n        e.preventDefault();\n        \n        const imgUrl = '';\n        const data = { imgUrl };\n\n        (async () => {\n            try{\n                await deleteAlbumArtwork(data, album.id);\n                // e.target.value = null;\n            } catch(res) {\n                if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n    }\n\n\n    const handleUploadTrackBtn = (e) => {\n        e.preventDefault();\n        setTrackIsLoading(true);\n\n        const data = new FormData();\n\n        data.append(\"title\", tracksData.title1);\n        data.append(\"albumId\", album.id);\n        data.append(\"allowDownload\", false);\n        data.append(\"file\", tracksData.track1Url);\n\n        try {\n            (async () => {\n                const newTrack = await createTrack(data);\n                // await setUploadedTracksVisible(true); \n                await setTracksData(prevState => ({...prevState, track1: ''}));\n                await setTracksData(prevState => ({...prevState, title1: ''}));\n                await setTrackCount(trackCount+1);\n                await setCurrentIdx(1);\n                await setTrackIsLoading(false);\n                console.log(\"TRACKS DATA!!!!! \", tracksData)\n            })()\n        } catch(res) {\n            setTrackIsLoading(false);\n            if (res.data && res.data.errors) setTrackFormErrors(res.data.errors);\n        }\n    }\n\n    const handleEditTrackTitleBtn = (e) => {\n        e.preventDefault();\n        const data = new FormData();\n\n        data.append(\"title\", tracksData[`title${currentIdx}`]);\n        data.append(\"albumId\", album.id);\n        data.append(\"allowDownload\", false);\n\n        (async () => {\n            await editTrackTitle(data, currentTrackId);\n            await setCurrentIdx(1);\n        })()\n    }\n\n\n    const handleDeleteTrackBtn = (trackId) => (e) => {\n        e.preventDefault();\n        try{\n            (async () => {\n                const res = await deleteTrack(trackId);\n                await setTrackCount(trackCount - 1);\n                await setCurrentIdx(1);\n                console.log(\"DELETED! \", res);\n            })()\n        } catch(res) {\n            if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n        }\n    }\n    \n    const handlePublishBtn = (e) => {\n        e.preventDefault();\n\n        //ASK ABOUT THIS??????\n        // setIsPublished(true);\n        const data = {\"isPublished\": true};\n        \n        (async () => {\n            try{\n                await publishAlbum(data, album.id);\n                await setIsPublished(true);\n            } catch(res) {\n                if (res.data && res.data.errors) setAlbumFormErrors(res.data.errors);\n            }\n        })()\n\n    }\n\n    if(!album) {\n        return null;\n    }\n\n    return (\n        <div className=\"album-edit-page__holder\">\n            <div className=\"album-edit-page__left-col\">\n                <div onClick={handleAlbumDetailSelect} className =\n                    { (currentIdx === albumDetailSelectIdx) ? \n                    (\"album-edit-page__album-select active\") : \n                    (\"album-edit-page__album-select\")} >\n                    \n                    {/* ADD CONFIRM BUTTON LATER!! =============================================================*/}\n                    {album && album.imgUrl ? \n                            (\n                                <div className=\"album-edit-page__album-art\" style={{backgroundImage: `url(${album.imgUrl})`}}>\n                                    <button type=\"submit\" onClick={handleDeleteAlbumArtworkBtn} className=\"album-edit-page__artwork-delete-btn\">\n                                        <i className=\"fas fa-times\"></i>\n                                    </button>   \n                                </div>\n                            ) : \n                            (\n                                albumIsLoading ? \n                                <div className=\"album-edit-page__album-placeholder\">\n                                    <span>Loading...</span>\n                                    <CircularIndeterminate />\n                                </div> :\n                                <div className=\"album-edit-page__album-placeholder\"></div>\n                            )\n                    }\n                    <div className=\"album-edit-page__album-details-holder\"> \n                        {album && album.title && (currentIdx !== albumDetailSelectIdx) ?\n                            <h4>{ album.title }</h4> :\n                            albumTitle ? \n                                <h4>{ albumTitle }</h4> :\n                                <h4>Untitled Album</h4>\n                        }\n                        by <span>The Pojos</span>\n                    </div>\n                </div>\n\n                <h4 className=\"album-edit-page__tracks-header\">TRACKS</h4>\n                \n                {album && album.tracks ? \n                    (\n                        <UploadedTracks \n                            album={album}\n                            tracksData={tracksData}\n                            setTracksData={setTracksData}\n                            currentIdx={currentIdx}\n                            setCurrentIdx={setCurrentIdx}\n                            setCurrentTrackId={setCurrentTrackId}\n                            // uploadedTrackClicked={uploadedTrackClicked}\n                            // setUploadedTrackClicked={setUploadedTrackClicked}\n                            handleDeleteTrackBtn={handleDeleteTrackBtn}\n                        />\n                    ) : null\n                }\n\n                {album ?\n\n                    <AddTrackSection \n                        currentIdx={currentIdx}\n                        setCurrentIdx={setCurrentIdx}\n                        addTrackIdx={addTrackIdx}\n                        tracksData={tracksData}\n                        trackIsLoading={trackIsLoading}/> :\n                    null\n                }\n        \n                {album && album.isPublished ?\n                    <>\n                        <span className=\"album-edit-page__publish-message\">\n                            Your album is LIVE! Take a look \n                            <NavLink exact to={`/albums/${album.id}`}> here</NavLink>\n                        </span>\n                        <button className=\"album-edit-page__publish-btn\" onClick={handlePublishBtn}>\n                            Published <CheckIcon style={{ fontSize: 14 }}/>\n                        </button> \n                    </> :\n                    <>\n                        <span className=\"album-edit-page__publish-message\">Album will be saved as a draft until it's published</span>\n                        <button className=\"album-edit-page__publish-btn\" onClick={handlePublishBtn}>\n                            Publish\n                        </button>\n                    </>\n                }\n\n            </div>\n\n            <div className=\"album-edit-page__right-col\">\n                {\n                    (currentIdx === albumDetailSelectIdx) ? \n                        (\n                            <AlbumForm \n                                album={album}\n                                updateProperty={updateProperty}\n                                albumTitle={albumTitle}\n                                setAlbumTitle={setAlbumTitle}\n                                setImg={setImg}\n                                description={description}\n                                setDescription={setDescription}\n                                credits={credits}\n                                setCredits={setCredits}\n                                // handleCreateAlbumSubmitBtn={handleCreateAlbumSubmitBtn}\n                                handleEditAlbumBtn={handleEditAlbumBtn}\n                                albumFormErrors={albumFormErrors} />\n                        ) : null\n                }\n                {\n                    (currentIdx >= addTrackIdx) ? \n                    (\n                        <TrackForm \n                            album={album}\n                            currentIdx={currentIdx}\n                            handleUploadTrackBtn={handleUploadTrackBtn}\n                            // trackTitle={trackTitle}\n                            // setTrackTitle={setTrackTitle}\n                            // setTrack={setTrack}\n                            // updateProperty={updateProperty}\n                            // addTrackIdx={addTrackIdx}\n                            tracksData={tracksData}\n                            setTracksData={setTracksData}\n                            updateTrackFormProperty={updateTrackFormProperty}\n                            // trackCount={trackCount}\n                            handleEditTrackTitleBtn={handleEditTrackTitleBtn}/>\n                    ) : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default EditAlbumPage;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport sessionReducer from './session';\nimport artistSignupReducer from './ui-artist-signup-form';\nimport fanSignupReducer from './ui-fan-signup-form';\nimport loginFormReducer from './ui-login-form';\nimport roleFormReducer from './ui-role-form';\nimport genresReducer from './genres'; \nimport followsReducer from './follows'; \nimport albumsReducer from './albums'; \nimport albumReducer from './album'; \n\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    artistSignupForm: artistSignupReducer,\n    fanSignupForm: fanSignupReducer,\n    loginForm: loginFormReducer,\n    roleForm: roleFormReducer,\n    genres: genresReducer,\n    follows: followsReducer,\n    albums: albumsReducer,\n    album: albumReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer);\n  };\n  \n  export default configureStore;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { uploadPhoto, deletePhoto, getUser, editBio } from '../store/actions/user'; \n\n// import {USER_ID} from '../store/actions/authentication';\n// import { createAlbum } from '../store/actions/album';\n// import { createTrack } from '../store/actions/track';\n\nimport * as albumActions from '../../store/album';\nimport * as tracksActions from '../../store/tracks';\nimport EditAlbumPage from './EditAlbumPage';\n\n\nconst EditAlbumPageContainer = () => {\n    const sessionUser = useSelector((state) => state.session.user)\n    const album = useSelector((state) => state.album.current)\n    const dispatch = useDispatch();\n\n    return (\n        <EditAlbumPage \n            user={sessionUser}\n            album={album}\n            // createAlbum={(data) => dispatch(albumActions.createAlbum(data))}\n            // getOneAlbum={(albumId) => dispatch(albumActions.getOneAlbum(albumId))}\n            editAlbum={(data, albumId) => dispatch(albumActions.editAlbum(data, albumId))}\n            deleteAlbumArtwork={(data, albumId) => dispatch(albumActions.deleteAlbumArtwork(data, albumId))}\n            publishAlbum={(data, albumId) => dispatch(albumActions.publishAlbum(data, albumId))}\n            createTrack={(data) => dispatch(tracksActions.createTrack(data))}\n            editTrackTitle={(data, trackId) => dispatch(tracksActions.editTrackTitle(data, trackId))}\n            deleteTrack={(trackId) => dispatch(tracksActions.deleteTrack(trackId))}\n        />\n    );\n}\n\nexport default EditAlbumPageContainer;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as followsActions from '../../store/follows';\n\nconst FollowBtn = ({ artistId }) => {\n \n    const dispatch = useDispatch();\n    const following = useSelector((state) => state.follows.followingList);\n    const [isFollowingArtist, setIsFollowingArtist] = useState(false);\n\n    \n    useEffect(() => {\n        const checkIfFollowing = (f) => {\n            return f.id === artistId;\n        }\n\n        setIsFollowingArtist(following.some(checkIfFollowing));\n    },[following, artistId])\n\n    const handleFollow = (e) => {\n        dispatch(followsActions.follow(artistId))\n            .then(setIsFollowingArtist(true));\n    }\n\n    const handleDeleteFollowBtn = (e) => {\n        dispatch(followsActions.deleteFollow(artistId))\n            .then(setIsFollowingArtist(false));\n    }\n\n    return (\n        <>\n            { isFollowingArtist ? (\n                <button onClick={handleDeleteFollowBtn} className=\"follow-btn\">\n                    <span>Following <i className=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i></span>\n                </button>\n                ) : (\n                    <button onClick={handleFollow} className=\"follow-btn\">\n                        <span>Follow</span>\n                    </button>\n                )\n            }\n        </>\n    )\n}\n\nexport default FollowBtn;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as followsActions from '../../store/follows';\n\nexport const Followers = ({ artistId }) => {\n\n    const dispatch = useDispatch();\n    const followers = useSelector((state) => state.follows.followersList);\n\n    useEffect(() => {\n        dispatch(followsActions.getFollowers(artistId))\n    },[artistId, dispatch])\n\n    if(!followers || followers.length === 0) {\n        return null\n    }\n\n    return (\n        <>\n        <div className=\"album-page__followers-header\">\n            supported by\n        </div>\n        <div className=\"album-page__followers-holder\">\n            {followers.map((follower) => {\n                return (\n                    <div key={follower.id} className=\"album-page__followers-photo-holder\">\n                        <div \n                            className=\"album-page__followers-photo\" \n                            style={{backgroundImage: `url(${follower.imgUrl})`}}>\n                        </div>\n                        <div className=\"album-page__followers-name\">\n                            {follower.userName}\n                        </div>\n                    </div>    \n                )\n            })}\n        </div>\n        </>\n    )\n}\n\nexport default Followers;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, useParams } from 'react-router-dom';\nimport AudioPlayer from 'react-h5-audio-player';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport 'react-h5-audio-player/lib/styles.css';\nimport './album-page.css';\nimport FollowBtn from './FollowBtn';\nimport Followers from './Followers';\nimport * as followsActions from '../../store/follows';\nimport * as albumActions from '../../store/album';\n\n\nconst AlbumPage = () => {\n\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.session.user);\n    const following = useSelector((state) => state.follows.followingList);\n    const album = useSelector((state) => state.album.current);\n    const [currentTrack, setCurrentTrack] = useState('');\n    const { albumId } = useParams();\n\n    useEffect(() => {\n        dispatch(albumActions.getOneAlbum(albumId))\n            .then(() => \n                dispatch(followsActions.getFollowing(user.id))\n            )\n    }, [albumId, dispatch, user.id]) \n    \n    if(!album|| !following) {\n        return null;\n    }\n\n    const tracks = album.tracks;\n    const artist = album.artist;\n\n    return (\n        <>\n            {/* {<Nav />} */}\n            <div className=\"album-page__holder\">\n                <div className=\"album-page\">\n                    <div className=\"album-page__header-holder\">\n                    <h1 className=\"album-page__header\">{album.title}</h1>\n                    </div>\n\n                    <div className=\"album-page__content-holder\">\n                        <div className=\"album-page__left-content\">\n                         \n                            <div className=\"artist-name-holder\">\n                                by  \n                                <NavLink className=\"left-content__artist-link\" exact to=\"\">\n                                    {artist.artistName}\n                                </NavLink>\n                            </div>\n                            \n                            <div className=\"audio-player-holder\">\n                                <AudioPlayer\n                                    autoPlay={false}\n                                    volume={0.5}\n                                    src={currentTrack}\n                                    onPlay={e => console.log(\"onPlay\")}\n                                    showDownloadProgress={true}\n                                />\n                            </div>\n\n\n                            {tracks.map((track, i) => (\n                                <div key={track.id} className=\"track-holder\">\n                                    <div className=\"track-holder__play-btn\">\n                                        <PlayArrowIcon \n                                            style={{ fontSize: 'medium' }}\n                                            onClick={() => setCurrentTrack(track.trackUrl)}/>\n                                    </div>\n                                    <span>{i+1}. </span>\n                                    <button onClick={() => setCurrentTrack(track.trackUrl)} className=\"track\">\n                                        {track.title}\n                                    </button>\n                                </div>\n                            ))}\n                            <div className=\"description\">\n                                <div className=\"description__header\">\n                                    About album\n                                </div>\n                                {album.description}\n                            </div>\n                            <div className=\"rights\">\n                                all rights reserved &copy;\n                            </div>\n                        </div>\n\n                        <div className=\"album-page__middle-content\">\n                            <div className=\"album-cover-holder\">\n                                <img alt=\"album cover\" className=\"album-cover\" src={album.imgUrl} />\n                            </div>\n                            <Followers artistId={artist.id} />\n                        </div>\n\n                        <div className=\"album-page__right-content\">\n                            <img alt=\"artist\" className=\"artist-photo\" src={artist.imgUrl} />\n                            \n                            <div className=\"artist-name\">\n                                {artist.artistName}\n                            </div>\n\n                            <FollowBtn artistId={artist.id} />\n\n                            <div className=\"bio\">\n                                {artist.bio}\n                            </div>\n                        </div>\n                </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default AlbumPage;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport SignupPage from \"./components/SignupPage\";\nimport LoginFormPage from \"./components/LoginFormPage/index\";\n// import SignupFormPage from \"./components/SignupFormPage\";\nimport Navigation from './components/Navigation';\nimport Dashboard from './components/Dashboard';\nimport CreateAlbumPage from './components/CreateAlbumPage';\nimport EditAlbumPageContainer from './components/EditAlbumPageContainer';\nimport AlbumPage from './components/AlbumPage';\nimport * as sessionActions from \"./store/session\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser())\n      .then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return isLoaded && (\n    <>\n      <Navigation isLoaded={isLoaded}/>\n      <Switch>\n        <Route exact={true} path=\"/signup\" \n          render = {() => <SignupPage /> }\n        />\n        <Route exact path=\"/login\">\n          <LoginFormPage/>\n        </Route>\n        <Route exact path=\"/albums/:albumId\">\n          <AlbumPage />\n        </Route>\n        <Route exact path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route exact path=\"/create-album\">\n          <CreateAlbumPage />\n        </Route>\n        <Route exact path=\"/edit-album/:albumId\">\n          <EditAlbumPageContainer/>\n        </Route>\n        {/* <Route exact path=\"/signup\">\n          <SignupFormPage />\n        </Route> */}\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nimport configureStore from './store';\nimport { restoreCSRF, fetch } from './store/csrf';\nimport * as sessionActions from './store/session';\nimport * as followsActions from './store/follows';\nimport * as albumsActions from './store/albums';\nimport * as albumActions from './store/album';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n  window.followsActions = followsActions;\n  window.albumsActions = albumsActions;\n\n  // window.store.dispatch(window.albumsActions.getFeaturedAlbums())\n  // window.store.dispatch(window.sessionActions.signup({\n  //   username: 'NewUser',\n  //   email: 'new@user.io',\n  //   password: 'password',\n  //   artistName: 'newArtist',\n  //   isArtist: true,\n  //   bio: 'new bio!',\n  //   imgUrl: null,\n  //   genre: 'Rock'\n  // }));\n\n\n  // window.store.dispatch(window.followsActions.getFollowing());\n  // window.store.dispatch(window.albumsActions.getAllAlbumsForOneArtist(21));\n\n}\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}